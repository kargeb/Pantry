{"version":3,"sources":["images/loading_dots.gif","themes/GlobalStyle.js","themes/themes.js","fbase.js","context.js","components/ShadowScrollbar/ShadowScrollbar.jsx","hoc/withProductsAndCategories.jsx","components/templates/Modal.jsx","components/atoms/texts/H1.jsx","components/atoms/buttons/ButtonIconConfirm.jsx","components/atoms/buttons/ButtonIconCancel.jsx","components/molecules/WrapperButtonsConfirmAndCancel.jsx","components/atoms/texts/H2.jsx","components/pantry/FormChangeQuantity/components/DeleteProductModal.jsx","components/atoms/formElements/Label.jsx","components/atoms/formElements/Input.jsx","components/pantry/FormPantryProduct/components/InputName.jsx","components/atoms/formElements/Select.jsx","components/pantry/FormPantryProduct/components/SelectCategory.jsx","components/pantry/FormPantryProduct/components/SelectUnit.jsx","components/pantry/FormPantryProduct/components/InputMin.jsx","components/pantry/FormPantryProduct/components/InputQuantity.jsx","components/molecules/Alert.jsx","components/pantry/FormPantryProduct/container/FormPantryProductContainer.jsx","components/atoms/buttons/Button.jsx","components/pantry/FormChangeQuantity/components/EditDeleteButtonsSection.jsx","components/atoms/buttons/ButtonQuantity.jsx","components/molecules/ChangeQuantityInputAndButtons.jsx","components/pantry/FormChangeQuantity/container/FormChangeQuantityContainer.jsx","components/atoms/buttons/ButtonIconEditProduct.jsx","components/pantry/listPantry/PantryProduct.jsx","components/atoms/buttons/ButtonAddProduct.jsx","components/pantry/listPantry/HeaderPantryCategory.jsx","components/pantry/listPantry/PantryCategory.jsx","components/pantry/listPantry/PantryList.jsx","components/pantry/ButtonAddProductSection/ButtonAddProductSection.jsx","views/Pantry.jsx","components/shopping/buyProductModal/ModalBuyProduct.jsx","components/shopping/buyProductModal/ContainerBuyProduct.jsx","components/atoms/buttons/ButtonIconBuy.jsx","components/shopping/listShoppingProducts/ShoppingProduct.jsx","components/shopping/listShoppingProducts/ShoppingCategory.jsx","components/shopping/listShoppingProducts/HeaderShoppingList.jsx","components/shopping/listShoppingProducts/ShoppingList.jsx","views/Shopping.jsx","components/atoms/buttons/ButtonIconSwitch.jsx","components/settings/darkModeSection/DarkModeSection.jsx","components/atoms/divider/Divider.jsx","components/settings/categoriesSection/components/AddCategory.jsx","components/molecules/ModalConfirmDeletion.jsx","components/settings/categoriesSection/components/SelectCategory.jsx","components/settings/categoriesSection/components/DeleteCategory.jsx","components/settings/categoriesSection/container/CategoriesContainer.jsx","components/settings/categoriesSection/CategoriesSection.jsx","components/settings/sampleDataSection/ModalInsertSampleData.jsx","components/settings/sampleDataSection/SampleDataSection.jsx","views/Settings.jsx","components/navigation/Navigation.jsx","views/Root.jsx","index.jsx"],"names":["module","exports","GlobalStyle","createGlobalStyle","size","defaultTheme","inactiveNavColor","smallScreen","mediumScreen","largeScreen","grey60","grey10","grey20","primary20","medium","bold","heading1","heading2","body","button","lightTheme","name","primary","textPrimary","textSecondary","background","activeTextColorNav","wideScreenBackground","buttonPrimary","darkTheme","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","AppContext","React","createContext","CategoriesContext","ShadowScrollbars","props","handleUpdate","values","scrollTop","scrollHeight","clientHeight","shadowTopOpacity","Math","min","bottomScrollTop","shadowBottomOpacity","max","shadowTop","current","style","opacity","shadowBottom","createRef","this","containerStyle","position","onUpdate","ref","top","left","right","height","bottom","Component","withProductsAndCategories","WrappedComponent","Consumer","context","allProducts","products","productsOnShoppingList","filter","product","onShoppingList","selectCategoriesContainProducts","categoriesWithProducts","forEach","includes","category","push","pantryCategories","shoppingCategories","isLoading","shoppingProducts","Background","styled","div","Wrapper","theme","Modal","children","H1","h1","marginBottomDouble","css","marginBottom","marginTop","capitalize","Button","ButtonIconConfirm","onClick","icon","faCheckCircle","ButtonIconCancel","faTimesCircle","StyledButtonsWrapper","WrapperButtonsConfirmAndCancel","cancelOnClick","confirmOnClick","type","H2","h2","italic","DeleteProductModal","id","toggleDeleteModal","collection","doc","delete","then","console","log","catch","error","Label","label","Input","input","short","InputVerticalWrapper","InputName","handleForm","htmlFor","onChange","value","Select","select","SelectCategory","state","categories","get","setState","data","aria-label","disabled","hidden","map","categoryItem","key","InputHorizontalWrapper","SelectUnit","unit","InputMin","placeholder","InputQuantity","quantity","Alert","FormPantryProductContainer","isAlertVisible","uuidv4","e","target","parseInt","handleSubmit","toggleFormVisibility","toggleChangeQuantityModal","newProduct","Number","set","defaultProps","WrapperEditDeleteButtons","EditDeleteButtonsSection","toggleEditProductForm","ButtonQuantity","InputNumber","WrapperChangeQuantity","ChangeQuantityInputAndButtons","handleInput","addQuantity","subtractQuantity","className","FormChangeQuantityContainer","updateProductQuantity","update","prevState","isProductPropertiesForm","isDeleteModalVisible","ButtonIconEditProduct","faPen","CartIconWrapper","Icon","Name","QuantityWrapper","Quantity","Unit","Min","PantryProduct","isFormChangeQuantityContainerVisible","cartIconShow","faShoppingCart","ButtonAddProduct","li","AboveCartIcon","AboveName","Description","AboveButtonEditProduct","HeaderPantryCategory","CategoriesItem","TableHeader","CategoryLabel","ButtonAdd","ProductItem","PantryCategory","handleClick","currentCategory","productsInCurrentCategory","currentProduct","CategoriesList","ul","PantryList","src","loadingGif","alt","sort","ButtonAddProductSection","isFormVisible","Main","main","Pantry","ShadowScrollbar","ModalBuyProduct","toBuy","toggleBuyProductModal","ContainerBuyProduct","currentQuantity","quantityAfterShopping","ButtonIconBuy","faCartArrowDown","StyledWrapper","NameW","CurrentQuantity","Lack","ShoppingProduct","isBuyProductModalVisible","ListItem","ShoppingCategory","HeaderShoppingList","ShoppingList","length","StyledMain","Shopping","ButtonIconSwitch","themeName","faToggleOff","faToggleOn","Section","section","Header","WrapperToggleButton","DarkModeSection","changeTheme","currentTheme","Divider","horizontal","AddCategory","as","newCategory","handleAddCategory","ModalConfirmDeletion","handleDeleteCategory","heading","CustomSelect","Option","option","categoryToDelete","StyledLabel","setAlertMessage","CategoriesContainer","alertMessage","newCategories","categoriesWithoutDeletedOne","message","unsubscribe","onSnapshot","querySnapshot","categoriesContext","toggleCategoriesContainer","Provider","WrapperButton","CategoriesSection","isCategoriesContainerVisible","InsertSampleDataModal","toggleInsertModal","sampleData","dbRef","sampleProduct","uploadSampleData","SampleDataSection","isInsertModalVisible","Settings","header","Nav","nav","IconWithCounterWrapper","ShoppingListCounter","FontAwesomeIcon","NavLinkWrapper","NavLink","Navigation","to","faCogs","exact","faList","Root","downloadedProducts","contextElements","mergedTheme","path","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.27f9f36d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading_dots.180ce03a.gif\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n\r\n    ${\r\n      '' /* @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;0,900;1,500&display=swap'); */\r\n    }\r\n\r\n    *,*::before, *::after{\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body{\r\n        position: relative;\r\n        font-family: 'Roboto', sans-serif;\r\n        ${'' /* max-width: 400px; */}\r\n        margin: 0 auto;\r\n        height: 100vh;\r\n    }\r\n\r\n    header{\r\n        height: 70px;\r\n    }\r\n\r\n    main{\r\n        height: calc(100vh - 70px);\r\n    }\r\n\r\n    ul{\r\n        list-style-type: none;\r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit\r\n    }\r\n\r\n    ${\r\n      '' /* disable arrow buttons added by browser inside\r\n            Input type=\"number\" in changeQuantityForm  */\r\n    }\r\n    input[type=number].withoutSpinButtons::-webkit-inner-spin-button,\r\n    input[type=number].withoutSpinButtons::-webkit-outer-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n\r\n    button {\r\n        outline: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    select {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","const size = {\r\n  sm: '600px',\r\n  md: '960px',\r\n  lg: '1280px',\r\n};\r\n\r\nexport const defaultTheme = {\r\n  inactiveNavColor: 'rgba(255, 255, 255, 0.5)',\r\n  smallScreen: `${size.sm}`,\r\n  mediumScreen: `${size.md}`,\r\n  largeScreen: `${size.lg}`,\r\n  grey60: '#808080',\r\n  grey10: '#E5E5E5',\r\n  grey20: 'rgba(0,0,0,0.2)',\r\n  primary20: '#FEE8CC',\r\n  medium: 500,\r\n  bold: 900,\r\n  heading1: '26px',\r\n  heading2: '20px',\r\n  body: '16px',\r\n  button: '12px',\r\n};\r\n\r\nexport const lightTheme = {\r\n  name: 'lightTheme',\r\n  primary: '#FB8E01',\r\n  textPrimary: '#333',\r\n  textSecondary: '#fff',\r\n  background: '#fff',\r\n  activeTextColorNav: '#fff',\r\n  wideScreenBackground: defaultTheme.grey10,\r\n  buttonPrimary: defaultTheme.grey60,\r\n};\r\n\r\nexport const darkTheme = {\r\n  name: 'darkTheme',\r\n  primary: '#FB8E01',\r\n  textPrimary: '#eee',\r\n  textSecondary: '#333',\r\n  background: '#666',\r\n  activeTextColorNav: '#333',\r\n  wideScreenBackground: '#202020',\r\n  buttonPrimary: defaultTheme.grey10,\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;\r\n","import React from 'react';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport const CategoriesContext = React.createContext();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nclass ShadowScrollbars extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.shadowTop = React.createRef();\r\n    this.shadowBottom = React.createRef();\r\n  }\r\n\r\n  handleUpdate = values => {\r\n    const { scrollTop, scrollHeight, clientHeight } = values;\r\n    const shadowTopOpacity = (1 / 20) * Math.min(scrollTop, 20);\r\n    const bottomScrollTop = scrollHeight - clientHeight;\r\n    const shadowBottomOpacity =\r\n      (1 / 20) * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\r\n    this.shadowTop.current.style.opacity = shadowTopOpacity;\r\n    this.shadowBottom.current.style.opacity = shadowBottomOpacity;\r\n  };\r\n\r\n  render() {\r\n    const { style, ...props } = this.props;\r\n    const containerStyle = {\r\n      ...style,\r\n      position: 'relative',\r\n    };\r\n    const shadowTopStyle = {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      height: 10,\r\n      background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%)',\r\n    };\r\n    const shadowBottomStyle = {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      height: 10,\r\n      background: 'linear-gradient(to top, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%)',\r\n    };\r\n    return (\r\n      <div style={containerStyle}>\r\n        <Scrollbars onUpdate={this.handleUpdate} {...props} />\r\n        <div ref={this.shadowTop} style={shadowTopStyle} />\r\n        <div ref={this.shadowBottom} style={shadowBottomStyle} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShadowScrollbars.propTypes = {\r\n  style: PropTypes.object,\r\n};\r\n\r\nexport default ShadowScrollbars;\r\n","import React from 'react';\r\nimport { AppContext } from '../context';\r\n\r\nconst withProductsAndCategories = WrappedComponent => {\r\n  return props => (\r\n    <AppContext.Consumer>\r\n      {context => {\r\n        const allProducts = context.products;\r\n        const productsOnShoppingList = allProducts.filter(product => product.onShoppingList);\r\n\r\n        const selectCategoriesContainProducts = products => {\r\n          const categoriesWithProducts = [];\r\n          products.forEach(product => {\r\n            if (!categoriesWithProducts.includes(product.category)) {\r\n              categoriesWithProducts.push(product.category);\r\n            }\r\n          });\r\n\r\n          return categoriesWithProducts;\r\n        };\r\n\r\n        const pantryCategories = selectCategoriesContainProducts(allProducts);\r\n        const shoppingCategories = selectCategoriesContainProducts(productsOnShoppingList);\r\n\r\n        return (\r\n          <WrappedComponent\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n            {...props}\r\n            isLoading={context.isLoading}\r\n            products={allProducts}\r\n            shoppingProducts={productsOnShoppingList}\r\n            pantryCategories={pantryCategories}\r\n            shoppingCategories={shoppingCategories}\r\n          />\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default withProductsAndCategories;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  backdrop-filter: blur(1px);\r\n  z-index: 9999999;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding: 2% 4%;\r\n  color: ${props => props.theme.textPrimary};\r\n  background-color: ${props => props.theme.background};\r\n  border: solid 3px #999;\r\n`;\r\n\r\nconst Modal = ({ children }) => (\r\n  <Background>\r\n    <Wrapper>{children}</Wrapper>\r\n  </Background>\r\n);\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst H1 = styled.h1`\r\n  text-transform: capitalize;\r\n\r\n  font-size: ${({ theme }) => theme.heading1};\r\n  font-weight: ${({ theme }) => theme.medium};\r\n\r\n  ${({ marginBottomDouble }) =>\r\n    marginBottomDouble &&\r\n    css`\r\n      margin-bottom: 30px;\r\n    `}\r\n\r\n    ${({ marginBottom }) =>\r\n      marginBottom &&\r\n      css`\r\n        margin-bottom: 15px;\r\n      `}\r\n\r\n  ${({ marginTop }) =>\r\n    marginTop &&\r\n    css`\r\n      margin-top: 30px;\r\n    `}\r\n\r\n    /* ${({ capitalize }) =>\r\n      capitalize &&\r\n      css`\r\n        text-transform: capitalize;\r\n      `} */\r\n`;\r\n\r\nexport default H1;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.background};\r\n  transition: all 0.1s;\r\n  font-size: 45px;\r\n  color: ${({ theme }) => theme.primary};\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst ButtonIconConfirm = ({ onClick }) => (\r\n  <Button onClick={onClick}>\r\n    <FontAwesomeIcon icon={faCheckCircle} />\r\n  </Button>\r\n);\r\n\r\nButtonIconConfirm.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonIconConfirm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.background};\r\n  transition: all 0.1s;\r\n  font-size: 45px;\r\n  color: rgba(0, 0, 0, 0.4);\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst ButtonIconCancel = ({ onClick }) => (\r\n  <Button onClick={onClick}>\r\n    <FontAwesomeIcon icon={faTimesCircle} />\r\n  </Button>\r\n);\r\n\r\nButtonIconCancel.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonIconCancel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport ButtonIconConfirm from '../atoms/buttons/ButtonIconConfirm';\r\nimport ButtonIconCancel from '../atoms/buttons/ButtonIconCancel';\r\n\r\nconst StyledButtonsWrapper = styled.div`\r\n  display: flex;\r\n  width: 130px;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst WrapperButtonsConfirmAndCancel = ({ cancelOnClick, confirmOnClick }) => {\r\n  return (\r\n    <StyledButtonsWrapper>\r\n      <ButtonIconCancel type=\"button\" onClick={cancelOnClick} />\r\n      <ButtonIconConfirm type=\"button\" onClick={confirmOnClick} />\r\n    </StyledButtonsWrapper>\r\n  );\r\n};\r\n\r\nWrapperButtonsConfirmAndCancel.propTypes = {\r\n  cancelOnClick: PropTypes.func.isRequired,\r\n  confirmOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default WrapperButtonsConfirmAndCancel;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst H2 = styled.h2`\r\n  font-size: ${({ theme }) => theme.heading2};\r\n  font-weight: ${({ theme }) => theme.medium};\r\n  margin: 0 auto;\r\n\r\n  ${({ italic }) =>\r\n    italic &&\r\n    css`\r\n      font-style: italic;\r\n    `}\r\n  ${({ marginBottom }) =>\r\n    marginBottom &&\r\n    css`\r\n      margin-bottom: 15px;\r\n    `};\r\n`;\r\n\r\nexport default H2;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport db from '../../../../fbase';\r\nimport Modal from '../../../templates/Modal';\r\nimport H1 from '../../../atoms/texts/H1';\r\nimport WrapperButtonsConfirmAndCancel from '../../../molecules/WrapperButtonsConfirmAndCancel';\r\nimport H2 from '../../../atoms/texts/H2';\r\n\r\nconst DeleteProductModal = ({ id, name, toggleDeleteModal }) => {\r\n  const deleteProduct = () => {\r\n    db.collection('products')\r\n      .doc(id)\r\n      .delete()\r\n      .then(function () {\r\n        console.log('Document successfully deleted!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <H1 marginBottomDouble>Confirm deletion:</H1>\r\n      <H2 italic marginBottom>\r\n        {name}\r\n      </H2>\r\n      <WrapperButtonsConfirmAndCancel\r\n        cancelOnClick={toggleDeleteModal}\r\n        confirmOnClick={deleteProduct}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nDeleteProductModal.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  toggleDeleteModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DeleteProductModal;\r\n","import styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n  margin-bottom: 4px;\r\n  font-size: 13px;\r\n  color: ${props => props.theme.textPrimary};\r\n`;\r\n\r\nexport default Label;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  width: 155px;\r\n  height: 27px;\r\n  padding-left: 5px;\r\n  margin-bottom: 15px;\r\n  border: solid 1px #ada17e;\r\n  border-radius: 8px;\r\n  outline: none;\r\n  color: ${props => props.theme.textPrimary};\r\n  background-color: ${props => props.theme.background};\r\n\r\n  ${({ short }) =>\r\n    short &&\r\n    css`\r\n      margin-left: 10px;\r\n      width: 55px;\r\n      text-align: center;\r\n    `}\r\n\r\n  &:focus {\r\n    border: solid 1.5px rgba(251, 142, 1, 0.7);\r\n    box-shadow: 0px 0px 2px #ffc52f;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${props => props.theme.buttonPrimary};\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../../../atoms/formElements/Label';\r\nimport Input from '../../../atoms/formElements/Input';\r\n\r\nconst InputVerticalWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst InputName = ({ handleForm, name }) => {\r\n  return (\r\n    <InputVerticalWrapper>\r\n      <Label htmlFor=\"name\">Name</Label>\r\n      <Input id=\"name\" type=\"text\" onChange={handleForm} value={name} />\r\n    </InputVerticalWrapper>\r\n  );\r\n};\r\n\r\nInputName.propTypes = {\r\n  handleForm: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputName;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Select = styled.select`\r\n  width: 155px;\r\n  height: 27px;\r\n  margin-bottom: 20px;\r\n  border: solid 1px #ada17e;\r\n  border-radius: 8px;\r\n  outline: none;\r\n  color: ${props => props.theme.textPrimary};\r\n  background-color: ${props => props.theme.background};\r\n\r\n  ${({ short }) =>\r\n    short &&\r\n    css`\r\n      margin-left: 10px;\r\n      width: 55px;\r\n    `} :focus {\r\n    border: solid 1.5px rgba(251, 142, 1, 0.7);\r\n    box-shadow: 0px 0px 2px #ffc52f;\r\n  }\r\n`;\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport db from '../../../../fbase';\r\nimport Label from '../../../atoms/formElements/Label';\r\nimport Select from '../../../atoms/formElements/Select';\r\n\r\nconst InputVerticalWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nclass SelectCategory extends React.Component {\r\n  state = {\r\n    categories: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    db.collection('categories')\r\n      .doc('all')\r\n      .get()\r\n      .then(doc => this.setState({ categories: [...doc.data().categories] }));\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.state;\r\n    const { handleForm, category } = this.props;\r\n\r\n    return (\r\n      <InputVerticalWrapper>\r\n        <Label htmlFor=\"category\">Category</Label>\r\n        <Select id=\"category\" onChange={handleForm} value={category}>\r\n          <option aria-label=\"disable option\" value=\"\" disabled hidden />\r\n          {categories.map(categoryItem => (\r\n            <option key={categoryItem} value={categoryItem}>\r\n              {categoryItem}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </InputVerticalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nSelectCategory.propTypes = {\r\n  handleForm: PropTypes.func.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SelectCategory;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Select from '../../../atoms/formElements/Select';\r\nimport Label from '../../../atoms/formElements/Label';\r\n\r\nconst InputHorizontalWrapper = styled.div`\r\n  display: flex;\r\n  min-width: 120px;\r\n  flex: 1;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst SelectUnit = ({ handleForm, unit }) => {\r\n  return (\r\n    <InputHorizontalWrapper>\r\n      <Label htmlFor=\"unit\">Unit</Label>\r\n      <Select short id=\"unit\" onChange={handleForm} value={unit}>\r\n        <option value=\"item\">item</option>\r\n        <option value=\"btl.\">btl.</option>\r\n        <option value=\"pack\">pack</option>\r\n        <option value=\"l\">l</option>\r\n        <option value=\"ml\">ml</option>\r\n        <option value=\"kg\">kg</option>\r\n        <option value=\"g\">g</option>\r\n      </Select>\r\n    </InputHorizontalWrapper>\r\n  );\r\n};\r\n\r\nSelectUnit.propTypes = {\r\n  handleForm: PropTypes.func.isRequired,\r\n  unit: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SelectUnit;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../../../atoms/formElements/Label';\r\nimport Input from '../../../atoms/formElements/Input';\r\n\r\nconst InputHorizontalWrapper = styled.div`\r\n  display: flex;\r\n  min-width: 120px;\r\n  flex: 1;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst InputMin = ({ handleForm, min }) => {\r\n  return (\r\n    <InputHorizontalWrapper>\r\n      <Label htmlFor=\"min\">Min</Label>\r\n      <Input\r\n        short\r\n        id=\"min\"\r\n        type=\"number\"\r\n        placeholder=\"minimal quantity\"\r\n        onChange={handleForm}\r\n        value={min}\r\n      />\r\n    </InputHorizontalWrapper>\r\n  );\r\n};\r\n\r\nInputMin.propTypes = {\r\n  handleForm: PropTypes.func.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default InputMin;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../../../atoms/formElements/Label';\r\nimport Input from '../../../atoms/formElements/Input';\r\n\r\nconst InputHorizontalWrapper = styled.div`\r\n  display: flex;\r\n  min-width: 120px;\r\n  flex: 1;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst InputQuantity = ({ handleForm, quantity }) => {\r\n  return (\r\n    <InputHorizontalWrapper>\r\n      <Label htmlFor=\"quantity\">Quantity</Label>\r\n      <Input short id=\"quantity\" type=\"number\" onChange={handleForm} value={quantity} />\r\n    </InputHorizontalWrapper>\r\n  );\r\n};\r\n\r\nInputQuantity.propTypes = {\r\n  handleForm: PropTypes.func.isRequired,\r\n  quantity: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default InputQuantity;\r\n","import styled from 'styled-components';\r\n\r\nconst Alert = styled.div`\r\n  position: absolute;\r\n  bottom: -25px;\r\n  left: calc(50% - 75px);\r\n  width: 150px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  text-align: center;\r\n  color: #fff;\r\n  background-color: #814d0b;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport db from '../../../../fbase';\r\nimport Modal from '../../../templates/Modal';\r\nimport H1 from '../../../atoms/texts/H1';\r\nimport InputName from '../components/InputName';\r\nimport SelectCategory from '../components/SelectCategory';\r\nimport SelectUnit from '../components/SelectUnit';\r\nimport InputMin from '../components/InputMin';\r\nimport InputQuantity from '../components/InputQuantity';\r\nimport WrapperButtonsConfirmAndCancel from '../../../molecules/WrapperButtonsConfirmAndCancel';\r\nimport Alert from '../../../molecules/Alert';\r\n\r\nclass FormPantryProductContainer extends React.Component {\r\n  state = {\r\n    isAlertVisible: false,\r\n    name: '',\r\n    quantity: this.props.quantity,\r\n    category: this.props.category,\r\n    min: 5,\r\n    unit: 'item',\r\n    id: uuidv4(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props;\r\n    const { quantity } = this.state;\r\n\r\n    if (id) {\r\n      db.collection('products')\r\n        .doc(id)\r\n        .get()\r\n        .then(doc => this.setState({ ...doc.data(), quantity }));\r\n    }\r\n  }\r\n\r\n  handleForm = e => {\r\n    let { value } = e.target;\r\n\r\n    if (e.target.id === 'min' || e.target.id === 'quantity') {\r\n      value = parseInt(value, 10);\r\n\r\n      if (value < 0) {\r\n        value = 0;\r\n      }\r\n    }\r\n\r\n    this.setState({ [e.target.id]: value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { name, quantity, category, min, unit, id } = this.state;\r\n    const { toggleFormVisibility, toggleChangeQuantityModal } = this.props;\r\n\r\n    if (name && quantity >= 0 && category && min && unit) {\r\n      const newProduct = {\r\n        name,\r\n        quantity: Number(quantity),\r\n        category,\r\n        min: Number(min),\r\n        unit,\r\n        onShoppingList: Number(quantity) < min,\r\n        id,\r\n      };\r\n\r\n      db.collection('products').doc(newProduct.id).set(newProduct);\r\n\r\n      this.setState({\r\n        name: '',\r\n        quantity: 1,\r\n        category: '',\r\n        min: 1,\r\n        unit: 'item',\r\n        id: null,\r\n      });\r\n\r\n      toggleChangeQuantityModal();\r\n      toggleFormVisibility();\r\n    } else {\r\n      this.setState({ isAlertVisible: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { toggleFormVisibility, id } = this.props;\r\n    const { name, quantity, unit, min, category, isAlertVisible } = this.state;\r\n\r\n    return (\r\n      <Modal>\r\n        <H1 marginBottomDouble>{id ? 'Edit product' : 'New product'}</H1>\r\n        <InputName handleForm={this.handleForm} name={name} />\r\n        <SelectCategory handleForm={this.handleForm} category={category} />\r\n        <SelectUnit handleForm={this.handleForm} unit={unit} />\r\n        <InputMin handleForm={this.handleForm} min={min} />\r\n        <InputQuantity handleForm={this.handleForm} quantity={quantity} />\r\n        <WrapperButtonsConfirmAndCancel\r\n          cancelOnClick={toggleFormVisibility}\r\n          confirmOnClick={this.handleSubmit}\r\n        />\r\n        {isAlertVisible && <Alert>There are empty fields!</Alert>}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nFormPantryProductContainer.defaultProps = {\r\n  toggleChangeQuantityModal: () => {},\r\n  quantity: 0,\r\n  id: null,\r\n  category: '',\r\n};\r\n\r\nFormPantryProductContainer.propTypes = {\r\n  toggleFormVisibility: PropTypes.func.isRequired,\r\n  toggleChangeQuantityModal: PropTypes.func,\r\n  quantity: PropTypes.number,\r\n  id: PropTypes.string,\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default FormPantryProductContainer;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  font-family: inherit;\r\n  width: 130px;\r\n  height: 27px;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  font-size: ${({ theme }) => theme.button};\r\n  font-weight: ${({ theme }) => theme.medium};\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  border: 1px solid ${({ theme }) => theme.grey20};\r\n  line-height: 27px;\r\n  border-radius: 8px;\r\n  letter-spacing: 1px;\r\n  transition: transform 0.1s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../../../atoms/buttons/Button';\r\n\r\nconst WrapperEditDeleteButtons = styled.div`\r\n  margin-top: 30px;\r\n  height: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst EditDeleteButtonsSection = ({ toggleDeleteModal, toggleEditProductForm }) => {\r\n  return (\r\n    <WrapperEditDeleteButtons>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          toggleEditProductForm();\r\n        }}\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Button type=\"button\" onClick={toggleDeleteModal}>\r\n        Remove\r\n      </Button>\r\n    </WrapperEditDeleteButtons>\r\n  );\r\n};\r\n\r\nEditDeleteButtonsSection.propTypes = {\r\n  toggleDeleteModal: PropTypes.func.isRequired,\r\n  toggleEditProductForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditDeleteButtonsSection;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonQuantity = styled.button`\r\n  font-family: inherit;\r\n  width: 40px;\r\n  height: 28px;\r\n  line-height: 28px;\r\n  color: ${({ theme }) => theme.textPrimary};\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: 1px solid ${({ theme }) => theme.textPrimary};\r\n  border-radius: 4px;\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport default ButtonQuantity;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonQuantity from '../atoms/buttons/ButtonQuantity';\r\nimport Input from '../atoms/formElements/Input';\r\n\r\nconst InputNumber = styled(Input)`\r\n  border: none;\r\n  color: ${props => props.theme.textPrimary};\r\n  text-align: center;\r\n  width: 44px;\r\n  height: 44px;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-weight: 500;\r\n  font-size: 34px;\r\n  line-height: 44px;\r\n`;\r\n\r\nconst WrapperChangeQuantity = styled.div`\r\n  width: 160px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst ChangeQuantityInputAndButtons = ({\r\n  quantity,\r\n  handleInput,\r\n  addQuantity,\r\n  subtractQuantity,\r\n}) => {\r\n  return (\r\n    <WrapperChangeQuantity>\r\n      <ButtonQuantity onClick={subtractQuantity}>-</ButtonQuantity>\r\n\r\n      <InputNumber\r\n        short\r\n        className=\"withoutSpinButtons\"\r\n        type=\"number\"\r\n        id=\"currentQuantity\"\r\n        value={quantity}\r\n        onChange={handleInput}\r\n      />\r\n      <ButtonQuantity onClick={addQuantity}>+</ButtonQuantity>\r\n    </WrapperChangeQuantity>\r\n  );\r\n};\r\n\r\nChangeQuantityInputAndButtons.propTypes = {\r\n  quantity: PropTypes.number.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n  addQuantity: PropTypes.func.isRequired,\r\n  subtractQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChangeQuantityInputAndButtons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport db from '../../../../fbase';\r\nimport DeleteProductModal from '../components/DeleteProductModal';\r\nimport FormPantryProductContainer from '../../FormPantryProduct/container/FormPantryProductContainer';\r\nimport Modal from '../../../templates/Modal';\r\nimport H1 from '../../../atoms/texts/H1';\r\nimport EditDeleteButtonsSection from '../components/EditDeleteButtonsSection';\r\nimport WrapperButtonsConfirmAndCancel from '../../../molecules/WrapperButtonsConfirmAndCancel';\r\nimport H2 from '../../../atoms/texts/H2';\r\nimport ChangeQuantityInputAndButtons from '../../../molecules/ChangeQuantityInputAndButtons';\r\n\r\nclass FormChangeQuantityContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { name, quantity, id, min } = this.props;\r\n    this.state = {\r\n      quantity: Number(quantity),\r\n      name,\r\n      min,\r\n      id,\r\n      isProductPropertiesForm: false,\r\n      isDeleteModalVisible: false,\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    let { value } = e.target;\r\n    value = parseInt(value, 10);\r\n    if (value < 0) {\r\n      value = 0;\r\n    }\r\n    this.setState({ quantity: value });\r\n  };\r\n\r\n  addQuantity = () => {\r\n    const { quantity } = this.state;\r\n    this.setState({ quantity: quantity + 1 });\r\n  };\r\n\r\n  subtractQuantity = () => {\r\n    const { quantity } = this.state;\r\n    if (quantity === 0) {\r\n      return;\r\n    }\r\n    this.setState({ quantity: quantity - 1 });\r\n  };\r\n\r\n  updateProductQuantity = () => {\r\n    const { quantity, id, min } = this.state;\r\n    const { toggleChangeQuantityModal } = this.props;\r\n\r\n    db.collection('products')\r\n      .doc(id)\r\n      .update({\r\n        quantity,\r\n        onShoppingList: quantity < min,\r\n      });\r\n    toggleChangeQuantityModal();\r\n  };\r\n\r\n  toggleEditProductForm = () => {\r\n    this.setState(prevState => ({\r\n      isProductPropertiesForm: !prevState.isProductPropertiesForm,\r\n    }));\r\n  };\r\n\r\n  toggleDeleteModal = () => {\r\n    this.setState(prevState => ({\r\n      isDeleteModalVisible: !prevState.isDeleteModalVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { quantity, id, name, isDeleteModalVisible, isProductPropertiesForm } = this.state;\r\n    const { toggleChangeQuantityModal } = this.props;\r\n\r\n    return (\r\n      <Modal>\r\n        <H1 marginBottom>{name}</H1>\r\n        <H2 italic marginBottom>\r\n          Change quantity\r\n        </H2>\r\n        <ChangeQuantityInputAndButtons\r\n          quantity={quantity}\r\n          handleInput={this.handleInput}\r\n          subtractQuantity={this.subtractQuantity}\r\n          addQuantity={this.addQuantity}\r\n        />\r\n        <EditDeleteButtonsSection\r\n          toggleEditProductForm={this.toggleEditProductForm}\r\n          toggleDeleteModal={this.toggleDeleteModal}\r\n        />\r\n        <WrapperButtonsConfirmAndCancel\r\n          cancelOnClick={toggleChangeQuantityModal}\r\n          confirmOnClick={this.updateProductQuantity}\r\n        />\r\n\r\n        {isDeleteModalVisible && (\r\n          <DeleteProductModal id={id} name={name} toggleDeleteModal={this.toggleDeleteModal} />\r\n        )}\r\n\r\n        {isProductPropertiesForm && (\r\n          <FormPantryProductContainer\r\n            id={id}\r\n            quantity={quantity}\r\n            toggleFormVisibility={this.toggleEditProductForm}\r\n            toggleChangeQuantityModal={toggleChangeQuantityModal}\r\n          />\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nFormChangeQuantityContainer.propTypes = {\r\n  quantity: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n\r\n  toggleChangeQuantityModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormChangeQuantityContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Button = styled.button`\r\n  width: 45px;\r\n  height: 26px;\r\n  margin: 0 10px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.buttonPrimary};\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-radius: 25px;\r\n  font-size: 15px;\r\n  /* box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.25); */\r\n  box-shadow: 0px 0px 1px 1px ${({ theme }) => theme.buttonPrimary};\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n    box-shadow: 0px 0px 1px 1px ${({ theme }) => theme.primary};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonIconEditProduct = ({ onClick }) => (\r\n  <Button onClick={onClick}>\r\n    <FontAwesomeIcon icon={faPen} />\r\n  </Button>\r\n);\r\n\r\nButtonIconEditProduct.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonIconEditProduct;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\nimport FormChangeQuantityContainer from '../FormChangeQuantity/container/FormChangeQuantityContainer';\r\nimport ButtonIconEditProduct from '../../atoms/buttons/ButtonIconEditProduct';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 40px;\r\n  line-height: 20px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.mediumScreen}) {\r\n    width: 400px;\r\n  }\r\n`;\r\n\r\nconst CartIconWrapper = styled.div`\r\n  margin-left: 2px;\r\n  width: 40px;\r\n  min-height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 25px;\r\n  font-size: 20px;\r\n  background-color: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.primary};\r\n  cursor: pointer;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  user-select: none;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 2px 10px;\r\n  overflow-wrap: anywhere;\r\n  text-transform: capitalize;\r\n\r\n  &:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst QuantityWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst Quantity = styled.div`\r\n  font-weight: 900;\r\n  text-align: center;\r\n`;\r\n\r\nconst Unit = styled.div`\r\n  margin-left: 5px;\r\n  /* text-transform: capitalize; */\r\n`;\r\n\r\nconst Min = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nclass PantryProduct extends React.Component {\r\n  state = {\r\n    isFormChangeQuantityContainerVisible: false,\r\n  };\r\n\r\n  toggleChangeQuantityModal = () => {\r\n    this.setState(prevState => ({\r\n      isFormChangeQuantityContainerVisible: !prevState.isFormChangeQuantityContainerVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isFormChangeQuantityContainerVisible } = this.state;\r\n    const { product } = this.props;\r\n    const { name, quantity, unit, min, id } = product;\r\n    const cartIconShow = quantity < min;\r\n\r\n    return (\r\n      <>\r\n        <Wrapper>\r\n          <CartIconWrapper>\r\n            {cartIconShow && (\r\n              <Icon>\r\n                <FontAwesomeIcon icon={faShoppingCart} />\r\n              </Icon>\r\n            )}\r\n          </CartIconWrapper>\r\n\r\n          <Name>{name}</Name>\r\n          <QuantityWrapper>\r\n            <Quantity>{quantity}</Quantity>\r\n            <Unit>{unit}</Unit>\r\n          </QuantityWrapper>\r\n          <Min>({min})</Min>\r\n          <ButtonIconEditProduct onClick={this.toggleChangeQuantityModal} />\r\n        </Wrapper>\r\n        {isFormChangeQuantityContainerVisible && (\r\n          <FormChangeQuantityContainer\r\n            min={min}\r\n            name={name}\r\n            id={id}\r\n            quantity={quantity}\r\n            toggleChangeQuantityModal={this.toggleChangeQuantityModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPantryProduct.propTypes = {\r\n  product: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    min: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    unit: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default PantryProduct;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonAddProduct = styled.button`\r\n  border: none;\r\n  width: 55px;\r\n  height: 55px;\r\n  line-height: 55px;\r\n  background: ${({ theme }) => theme.primary};\r\n  border-radius: 50%;\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  font-size: 40px;\r\n  text-transform: uppercase;\r\n  transition: all 0.1s;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    font-size: 55px;\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default ButtonAddProduct;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Wrapper = styled.li`\r\n  display: flex;\r\n  height: 16px;\r\n`;\r\n\r\nconst AboveCartIcon = styled.div`\r\n  margin-left: 2px;\r\n  width: 40px;\r\n`;\r\n\r\nconst AboveName = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 13px;\r\n  flex: 1;\r\n  font-style: italic;\r\n  text-align: center;\r\n\r\n  ${({ bold }) =>\r\n    bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n\r\n  ${({ left }) =>\r\n    left &&\r\n    css`\r\n      text-align: left;\r\n      padding-left: 35px;\r\n    `}\r\n`;\r\n\r\nconst AboveButtonEditProduct = styled.div`\r\n  width: 45px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst HeaderPantryCategory = () => {\r\n  return (\r\n    <Wrapper>\r\n      <AboveCartIcon />\r\n      <AboveName />\r\n      <Description bold left>\r\n        Quantity\r\n      </Description>\r\n      <Description>Min</Description>\r\n      <AboveButtonEditProduct />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HeaderPantryCategory;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PantryProduct from './PantryProduct';\r\nimport ButtonAddProduct from '../../atoms/buttons/ButtonAddProduct';\r\nimport FormPantryProductContainer from '../FormPantryProduct/container/FormPantryProductContainer';\r\nimport HeaderPantryCategory from './HeaderPantryCategory';\r\n\r\nconst CategoriesItem = styled.li`\r\n  background-color: ${props => props.theme.background};\r\n  @media (min-width: ${({ theme }) => theme.mediumScreen}) {\r\n    width: 400px;\r\n    margin-bottom: 10px;\r\n    margin: 0 5px 10px 5px;\r\n    border: 1px solid ${({ theme }) => theme.grey20};\r\n  }\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n`;\r\n\r\nconst CategoryLabel = styled.div`\r\n  flex: 1;\r\n  font-style: normal;\r\n  text-align: left;\r\n  overflow-wrap: anywhere;\r\n  text-transform: capitalize;\r\n  font-weight: ${({ theme }) => theme.medium};\r\n  font-size: ${({ theme }) => theme.heading2};\r\n  color: ${({ theme }) => theme.primary};\r\n`;\r\n\r\nconst ButtonAdd = styled(ButtonAddProduct)`\r\n  margin: 0px 10px 0px 0px;\r\n  width: 24px;\r\n  height: 24px;\r\n  line-height: 24px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    font-size: 20px;\r\n    transform: scale(1.2);\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst ProductItem = styled.li`\r\n  &:nth-child(odd) {\r\n    /* background-color: ${({ theme }) => theme.primary20}; */\r\n  }\r\n`;\r\n\r\nclass PantryCategory extends React.Component {\r\n  state = {\r\n    isProductPropertiesForm: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { isProductPropertiesForm } = this.state;\r\n    this.setState({ isProductPropertiesForm: !isProductPropertiesForm });\r\n  };\r\n\r\n  render() {\r\n    const { currentCategory, productsInCurrentCategory } = this.props;\r\n    const { isProductPropertiesForm } = this.state;\r\n\r\n    return (\r\n      <CategoriesItem key={currentCategory}>\r\n        <TableHeader>\r\n          <CategoryLabel>{currentCategory}</CategoryLabel>\r\n          <ButtonAdd onClick={this.handleClick}>+</ButtonAdd>\r\n        </TableHeader>\r\n        <ul>\r\n          <HeaderPantryCategory />\r\n          {productsInCurrentCategory.map(currentProduct => (\r\n            <ProductItem key={currentProduct.id}>\r\n              <PantryProduct product={currentProduct} />\r\n            </ProductItem>\r\n          ))}\r\n        </ul>\r\n\r\n        {isProductPropertiesForm && (\r\n          <FormPantryProductContainer\r\n            category={currentCategory}\r\n            toggleFormVisibility={this.handleClick}\r\n          />\r\n        )}\r\n      </CategoriesItem>\r\n    );\r\n  }\r\n}\r\n\r\nPantryCategory.propTypes = {\r\n  currentCategory: PropTypes.string.isRequired,\r\n  productsInCurrentCategory: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      quantity: PropTypes.number.isRequired,\r\n      min: PropTypes.number.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      unit: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default PantryCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport loadingGif from '../../../images/loading_dots.gif';\r\nimport withProductsAndCategories from '../../../hoc/withProductsAndCategories';\r\nimport PantryCategory from './PantryCategory';\r\n\r\nconst CategoriesList = styled.ul`\r\n  @media (min-width: ${({ theme }) => theme.mediumScreen}) {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    flex-wrap: wrap;\r\n    margin: 0 3%;\r\n  }\r\n`;\r\n\r\n// props are from HOC, pantryCategories are categories that currently contain products\r\nconst PantryList = ({ products, pantryCategories, isLoading }) => (\r\n  <div>\r\n    {isLoading ? (\r\n      <img src={loadingGif} alt=\"Loading gif\" />\r\n    ) : (\r\n      <CategoriesList>\r\n        {pantryCategories.sort().map(currentCategory => {\r\n          const productsInCurrentCategory = products.filter(\r\n            product => product.category === currentCategory,\r\n          );\r\n          return (\r\n            <PantryCategory\r\n              key={currentCategory}\r\n              currentCategory={currentCategory}\r\n              productsInCurrentCategory={productsInCurrentCategory}\r\n            />\r\n          );\r\n        })}\r\n      </CategoriesList>\r\n    )}\r\n  </div>\r\n);\r\n\r\nPantryList.defaultProps = {\r\n  products: [],\r\n  pantryCategories: [],\r\n};\r\n\r\nPantryList.propTypes = {\r\n  products: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      quantity: PropTypes.number.isRequired,\r\n      min: PropTypes.number.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      unit: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  pantryCategories: PropTypes.arrayOf(PropTypes.string),\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withProductsAndCategories(PantryList);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonAddProduct from '../../atoms/buttons/ButtonAddProduct';\r\nimport FormPantryProductContainer from '../FormPantryProduct/container/FormPantryProductContainer';\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  padding: 8px 0;\r\n  background-color: ${props => props.theme.background};\r\n\r\n  @media (min-width: ${({ theme }) => theme.smallScreen}) {\r\n    padding: 15px 0;\r\n  }\r\n`;\r\n\r\nconst ButtonAdd = styled(ButtonAddProduct)`\r\n  @media (min-width: ${({ theme }) => theme.smallScreen}) {\r\n    width: 80px;\r\n    height: 80px;\r\n    line-height: 80px;\r\n    font-size: 65px;\r\n\r\n    &:hover {\r\n      font-size: 80px;\r\n      transform: scale(1.1);\r\n      cursor: pointer;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nclass ButtonAddProductSection extends React.Component {\r\n  state = {\r\n    isFormVisible: false,\r\n  };\r\n\r\n  toggleFormVisibility = () => {\r\n    this.setState(prevState => ({ isFormVisible: !prevState.isFormVisible }));\r\n  };\r\n\r\n  render() {\r\n    const { isFormVisible } = this.state;\r\n    return (\r\n      <Wrapper>\r\n        <ButtonAdd type=\"button\" onClick={this.toggleFormVisibility}>\r\n          +\r\n        </ButtonAdd>\r\n        {isFormVisible && (\r\n          <FormPantryProductContainer toggleFormVisibility={this.toggleFormVisibility} />\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonAddProductSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ShadowScrollbar from '../components/ShadowScrollbar/ShadowScrollbar';\r\nimport PantryList from '../components/pantry/listPantry/PantryList';\r\nimport ButtonAddProductSection from '../components/pantry/ButtonAddProductSection/ButtonAddProductSection';\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  padding-top: 5px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  color: ${props => props.theme.textPrimary};\r\n  background-color: ${props => props.theme.wideScreenBackground};\r\n\r\n  @media (min-width: ${({ theme }) => theme.mediumScreen}) {\r\n    padding-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Pantry = () => (\r\n  <Main>\r\n    <ShadowScrollbar style={{ height: '100%' }}>\r\n      <PantryList />\r\n    </ShadowScrollbar>\r\n    <ButtonAddProductSection />\r\n  </Main>\r\n);\r\nexport default Pantry;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../../templates/Modal';\r\nimport H1 from '../../atoms/texts/H1';\r\nimport H2 from '../../atoms/texts/H2';\r\nimport WrapperButtonsConfirmAndCancel from '../../molecules/WrapperButtonsConfirmAndCancel';\r\nimport ChangeQuantityInputAndButtons from '../../molecules/ChangeQuantityInputAndButtons';\r\n\r\nconst ModalBuyProduct = ({\r\n  name,\r\n  subtractQuantity,\r\n  addQuantity,\r\n  toBuy,\r\n  toggleBuyProductModal,\r\n  updateProductQuantity,\r\n  handleInput,\r\n}) => {\r\n  return (\r\n    <Modal>\r\n      <H1 marginBottomDouble>Quantity purchased:</H1>\r\n      <H2 italic marginBottom>\r\n        {name}\r\n      </H2>\r\n      <ChangeQuantityInputAndButtons\r\n        subtractQuantity={subtractQuantity}\r\n        addQuantity={addQuantity}\r\n        quantity={toBuy}\r\n        handleInput={handleInput}\r\n      />\r\n      <WrapperButtonsConfirmAndCancel\r\n        cancelOnClick={toggleBuyProductModal}\r\n        confirmOnClick={() => updateProductQuantity(toggleBuyProductModal)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalBuyProduct.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  toggleBuyProductModal: PropTypes.func.isRequired,\r\n  updateProductQuantity: PropTypes.func.isRequired,\r\n  addQuantity: PropTypes.func.isRequired,\r\n  subtractQuantity: PropTypes.func.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n  toBuy: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ModalBuyProduct;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport db from '../../../fbase';\r\n\r\nimport ModalBuyProduct from './ModalBuyProduct';\r\n\r\nclass ContainerBuyProduct extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id, toBuy, min, currentQuantity } = this.props;\r\n\r\n    this.state = {\r\n      min,\r\n      currentQuantity,\r\n      toBuy,\r\n      id,\r\n    };\r\n  }\r\n\r\n  addQuantity = () => {\r\n    const { toBuy } = this.state;\r\n    this.setState({ toBuy: toBuy + 1 });\r\n  };\r\n\r\n  subtractQuantity = () => {\r\n    const { toBuy } = this.state;\r\n    if (toBuy === 0) {\r\n      return;\r\n    }\r\n    this.setState({ toBuy: toBuy - 1 });\r\n  };\r\n\r\n  handleInput = e => {\r\n    let { value } = e.target;\r\n    value = parseInt(value, 10);\r\n    if (value < 0) {\r\n      value = 0;\r\n    }\r\n    this.setState({ toBuy: value });\r\n  };\r\n\r\n  updateProductQuantity = toggleBuyProductModal => {\r\n    const { currentQuantity, id, toBuy, min } = this.state;\r\n    const quantityAfterShopping = +currentQuantity + +toBuy;\r\n\r\n    db.collection('products')\r\n      .doc(id)\r\n      .update({\r\n        quantity: quantityAfterShopping,\r\n        onShoppingList: quantityAfterShopping < min,\r\n      });\r\n    toggleBuyProductModal();\r\n  };\r\n\r\n  render() {\r\n    const { name, toggleBuyProductModal } = this.props;\r\n    const { toBuy } = this.state;\r\n\r\n    return (\r\n      <ModalBuyProduct\r\n        handleInput={this.handleInput}\r\n        addQuantity={this.addQuantity}\r\n        subtractQuantity={this.subtractQuantity}\r\n        toBuy={toBuy}\r\n        name={name}\r\n        toggleBuyProductModal={toggleBuyProductModal}\r\n        updateProductQuantity={this.updateProductQuantity}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nContainerBuyProduct.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  toggleBuyProductModal: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  toBuy: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n  currentQuantity: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ContainerBuyProduct;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartArrowDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Button = styled.button`\r\n  width: 55px;\r\n  height: 30px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.buttonPrimary};\r\n  background-color: ${({ theme }) => theme.background};\r\n  /* border: 1px solid ${({ theme }) => theme.background}; */\r\n  border-radius: 25px;\r\n  font-size: 24px;\r\n  box-shadow: 0px 0px 1px 1px ${({ theme }) => theme.buttonPrimary};\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n    box-shadow: 0px 0px 1px 1px ${({ theme }) => theme.primary};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonIconBuy = ({ onClick }) => (\r\n  <Button onClick={onClick}>\r\n    <FontAwesomeIcon icon={faCartArrowDown} />\r\n  </Button>\r\n);\r\n\r\nButtonIconBuy.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonIconBuy;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ContainerBuyProduct from '../buyProductModal/ContainerBuyProduct';\r\nimport ButtonIconBuy from '../../atoms/buttons/ButtonIconBuy';\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 0 10px;\r\n  min-height: 40px;\r\n  line-height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst NameW = styled.div`\r\n  flex: 3;\r\n  overflow-wrap: anywhere;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst CurrentQuantity = styled.div`\r\n  text-align: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst Lack = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n`;\r\n\r\nclass ShoppingProduct extends React.Component {\r\n  state = {\r\n    isBuyProductModalVisible: false,\r\n  };\r\n\r\n  toggleBuyProductModal = () => {\r\n    this.setState(prevState => ({\r\n      isBuyProductModalVisible: !prevState.isBuyProductModalVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { name, id, quantity, min } = this.props;\r\n    const { isBuyProductModalVisible } = this.state;\r\n    const toBuy = min - quantity;\r\n\r\n    return (\r\n      <StyledWrapper>\r\n        <NameW>{name}</NameW>\r\n        <CurrentQuantity>{quantity}</CurrentQuantity>\r\n        <Lack>{toBuy}</Lack>\r\n        <ButtonIconBuy onClick={this.toggleBuyProductModal} />\r\n        {isBuyProductModalVisible && (\r\n          <ContainerBuyProduct\r\n            id={id}\r\n            name={name}\r\n            currentQuantity={quantity}\r\n            min={min}\r\n            toBuy={toBuy}\r\n            toggleBuyProductModal={this.toggleBuyProductModal}\r\n          />\r\n        )}\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nShoppingProduct.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  quantity: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ShoppingProduct;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ShoppingProduct from './ShoppingProduct';\r\n\r\nconst CategoryLabel = styled.div`\r\n  padding: 10px 0 5px 0px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 23px;\r\n  text-transform: capitalize;\r\n  color: ${({ theme }) => theme.primary};\r\n\r\n  @media (min-width: 1024px) {\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  list-style: disc;\r\n  margin-left: 22px;\r\n`;\r\n\r\nconst ShoppingCategory = ({ currentCategory, productsInCurrentCategory }) => (\r\n  <>\r\n    <CategoryLabel>{currentCategory}</CategoryLabel>\r\n    <ul>\r\n      {productsInCurrentCategory.map(currentProduct => (\r\n        <ListItem key={currentProduct.id}>\r\n          <ShoppingProduct\r\n            name={currentProduct.name}\r\n            id={currentProduct.id}\r\n            quantity={currentProduct.quantity}\r\n            min={currentProduct.min}\r\n          />\r\n        </ListItem>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nShoppingCategory.propTypes = {\r\n  productsInCurrentCategory: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      quantity: PropTypes.number.isRequired,\r\n      min: PropTypes.number.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      unit: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  currentCategory: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ShoppingCategory;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px 10px 0 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.smallScreen}) {\r\n    width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst AboveName = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 13px;\r\n  flex: 1;\r\n  font-style: italic;\r\n  text-align: center;\r\n\r\n  ${({ bold }) =>\r\n    bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n`;\r\n\r\nconst AboveCartIcon = styled.div`\r\n  width: 55px;\r\n`;\r\n\r\nconst HeaderShoppingList = () => {\r\n  return (\r\n    <Wrapper>\r\n      <AboveName />\r\n      <Description>Qty</Description>\r\n      <Description bold>Lack</Description>\r\n      <AboveCartIcon />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HeaderShoppingList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport loadingGif from '../../../images/loading_dots.gif';\r\nimport withProductsAndCategories from '../../../hoc/withProductsAndCategories';\r\nimport ShoppingCategory from './ShoppingCategory';\r\nimport HeaderShoppingList from './HeaderShoppingList';\r\n\r\nconst CategoriesList = styled.ul`\r\n  padding: 0px 5px;\r\n  @media (min-width: ${({ theme }) => theme.smallScreen}) {\r\n    width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\n// props are from HOC\r\nconst ShoppingList = ({ shoppingProducts, shoppingCategories, isLoading }) => {\r\n  shoppingCategories.sort();\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <img src={loadingGif} alt=\"Loading gif\" />\r\n      ) : (\r\n        <>\r\n          {!!shoppingCategories.length && <HeaderShoppingList />}\r\n          <CategoriesList>\r\n            {shoppingCategories.map(currentCategory => {\r\n              const productsInCurrentCategory = shoppingProducts.filter(\r\n                product => product.category === currentCategory,\r\n              );\r\n              return (\r\n                <li key={currentCategory}>\r\n                  <ShoppingCategory\r\n                    currentCategory={currentCategory}\r\n                    productsInCurrentCategory={productsInCurrentCategory}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </CategoriesList>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nShoppingList.defaultProps = {\r\n  shoppingProducts: [],\r\n  shoppingCategories: [],\r\n};\r\n\r\nShoppingList.propTypes = {\r\n  shoppingProducts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      quantity: PropTypes.number.isRequired,\r\n      min: PropTypes.number.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      unit: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  shoppingCategories: PropTypes.arrayOf(PropTypes.string),\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withProductsAndCategories(ShoppingList);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ShoppingList from '../components/shopping/listShoppingProducts/ShoppingList';\r\nimport ShadowScrollbar from '../components/ShadowScrollbar/ShadowScrollbar';\r\n\r\nconst StyledMain = styled.main`\r\n  height: calc(100vh - 70px);\r\n  color: ${props => props.theme.textPrimary};\r\n  background-color: ${props => props.theme.background};\r\n`;\r\n\r\nconst Shopping = () => {\r\n  return (\r\n    <StyledMain>\r\n      {/* <ShadowScrollbar style={{ height: 'calc(100vh - 70px)' }}> */}\r\n      <ShadowScrollbar style={{ height: '100%' }}>\r\n        <ShoppingList />\r\n      </ShadowScrollbar>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Shopping;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background-color: inherit;\r\n  font-size: 35px;\r\n  color: ${({ theme }) => theme.textPrimary};\r\n`;\r\n\r\nconst ButtonIconSwitch = ({ onClick, themeName }) => (\r\n  <Button onClick={onClick}>\r\n    {themeName === 'lightTheme' ? (\r\n      <FontAwesomeIcon icon={faToggleOff} />\r\n    ) : (\r\n      <FontAwesomeIcon icon={faToggleOn} />\r\n    )}\r\n  </Button>\r\n);\r\n\r\nButtonIconSwitch.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  themeName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ButtonIconSwitch;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppContext } from '../../../context';\r\nimport H2 from '../../atoms/texts/H2';\r\nimport Label from '../../atoms/formElements/Label';\r\nimport ButtonIconSwitch from '../../atoms/buttons/ButtonIconSwitch';\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 100%;\r\n    margin: 0 20px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  @media (min-width: 1024px) {\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst WrapperToggleButton = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 120px;\r\n  padding: 20px 0;\r\n  @media (min-width: 1024px) {\r\n    height: 90px;\r\n  }\r\n`;\r\n\r\nconst DarkModeSection = () => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {context => (\r\n        <Section>\r\n          <Header>\r\n            <H2>Dark Mode</H2>\r\n          </Header>\r\n          <WrapperToggleButton>\r\n            <Label>Off</Label>\r\n            <ButtonIconSwitch onClick={context.changeTheme} themeName={context.currentTheme.name} />\r\n            <Label>On</Label>\r\n          </WrapperToggleButton>\r\n        </Section>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default DarkModeSection;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Divider = styled.div`\r\n  height: 1px;\r\n  width: 300px;\r\n  margin: 10px 0;\r\n  background-color: ${({ theme }) => theme.primary};\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 100%;\r\n    width: 1px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      height: 1px;\r\n      width: 200px;\r\n      margin-bottom: 20px;\r\n\r\n      @media (min-width: 1024px) {\r\n        height: 1px;\r\n        width: 200px;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default Divider;\r\n","import React from 'react';\r\nimport { CategoriesContext } from '../../../../context';\r\nimport H1 from '../../../atoms/texts/H1';\r\nimport Input from '../../../atoms/formElements/Input';\r\nimport Button from '../../../atoms/buttons/Button';\r\n\r\nconst AddCategory = () => (\r\n  <CategoriesContext.Consumer>\r\n    {context => (\r\n      <>\r\n        <H1 marginBottom as=\"h2\">\r\n          Add category:\r\n        </H1>\r\n        <Input\r\n          id=\"newCategory\"\r\n          type=\"text\"\r\n          onChange={context.handleForm}\r\n          value={context.newCategory}\r\n          placeholder=\"Name\"\r\n        />\r\n        <Button type=\"button\" onClick={context.handleAddCategory}>\r\n          Add\r\n        </Button>\r\n      </>\r\n    )}\r\n  </CategoriesContext.Consumer>\r\n);\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../templates/Modal';\r\nimport H1 from '../atoms/texts/H1';\r\nimport H2 from '../atoms/texts/H2';\r\nimport WrapperButtonsConfirmAndCancel from './WrapperButtonsConfirmAndCancel';\r\n\r\nconst ModalConfirmDeletion = ({ name, toggleDeleteModal, handleDeleteCategory, heading }) => {\r\n  const handleConfirmDelete = () => {\r\n    handleDeleteCategory();\r\n    toggleDeleteModal();\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <H1 marginBottomDouble>{heading}</H1>\r\n      <H2 italic marginBottom>\r\n        {name}\r\n      </H2>\r\n      <WrapperButtonsConfirmAndCancel\r\n        cancelOnClick={toggleDeleteModal}\r\n        confirmOnClick={handleConfirmDelete}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalConfirmDeletion.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  toggleDeleteModal: PropTypes.func.isRequired,\r\n  handleDeleteCategory: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalConfirmDeletion;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { CategoriesContext } from '../../../../context';\r\n\r\nimport Select from '../../../atoms/formElements/Select';\r\nimport withProductsAndCategories from '../../../../hoc/withProductsAndCategories';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 15px;\r\n  height: 100px;\r\n  padding: 2px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst CustomSelect = styled(Select)`\r\n  font-size: 15px;\r\n  height: 100px;\r\n  padding: 2px;\r\n`;\r\n\r\nconst Option = styled.option`\r\n  background-color: ${({ theme }) => theme.textSecondary};\r\n  color: ${({ theme }) => theme.textPrimary};\r\n\r\n  &:hover {\r\n    font-weight: 600;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: ${({ theme }) => theme.grey20};\r\n    color: ${({ theme }) => theme.textPrimary};\r\n    cursor: not-allowed;\r\n\r\n    &:hover {\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n\r\n// pantryCategories is from HOC, these are categories that currently contain products\r\nconst SelectCategory = ({ pantryCategories }) => {\r\n  return (\r\n    <CategoriesContext.Consumer>\r\n      {context => (\r\n        <Wrapper>\r\n          <CustomSelect\r\n            id=\"categoryToDelete\"\r\n            onChange={context.handleForm}\r\n            value={context.categoryToDelete}\r\n            size=\"5\"\r\n          >\r\n            <option aria-label=\"disable option\" value=\"\" disabled hidden />\r\n            {context.categories &&\r\n              context.categories.sort().map(category => (\r\n                <Option\r\n                  disabled={pantryCategories.includes(category)}\r\n                  key={category}\r\n                  value={category}\r\n                >\r\n                  {category}\r\n                </Option>\r\n              ))}\r\n          </CustomSelect>\r\n        </Wrapper>\r\n      )}\r\n    </CategoriesContext.Consumer>\r\n  );\r\n};\r\n\r\nSelectCategory.propTypes = {\r\n  pantryCategories: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default withProductsAndCategories(SelectCategory);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CategoriesContext } from '../../../../context';\r\nimport H1 from '../../../atoms/texts/H1';\r\nimport Label from '../../../atoms/formElements/Label';\r\nimport Button from '../../../atoms/buttons/Button';\r\n\r\nimport ModalConfirmDeletion from '../../../molecules/ModalConfirmDeletion';\r\nimport withProductsAndCategories from '../../../../hoc/withProductsAndCategories';\r\nimport SelectCategory from './SelectCategory';\r\n\r\nconst StyledLabel = styled(Label)`\r\n  width: 155px;\r\n  /* color: ${({ theme }) => theme.grey60}; */\r\n  text-align: center;\r\n`;\r\n\r\nconst DeleteCategory = () => (\r\n  <CategoriesContext.Consumer>\r\n    {context => (\r\n      <>\r\n        <H1 marginBottom as=\"h2\">\r\n          Remove category:\r\n        </H1>\r\n        <StyledLabel>Only categories without products can be removed</StyledLabel>\r\n        <SelectCategory />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() =>\r\n            context.categoryToDelete\r\n              ? context.toggleDeleteModal()\r\n              : context.setAlertMessage('Choose a category!')\r\n          }\r\n        >\r\n          Remove\r\n        </Button>\r\n        {context.isDeleteModalVisible && (\r\n          <ModalConfirmDeletion\r\n            heading=\"Confirm deletion of:\"\r\n            name={context.categoryToDelete}\r\n            toggleDeleteModal={context.toggleDeleteModal}\r\n            handleDeleteCategory={context.handleDeleteCategory}\r\n          />\r\n        )}\r\n      </>\r\n    )}\r\n  </CategoriesContext.Consumer>\r\n);\r\nexport default withProductsAndCategories(DeleteCategory);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CategoriesContext } from '../../../../context';\r\n\r\nimport db from '../../../../fbase';\r\nimport Modal from '../../../templates/Modal';\r\nimport ButtonIconCancel from '../../../atoms/buttons/ButtonIconCancel';\r\nimport Divider from '../../../atoms/divider/Divider';\r\nimport Alert from '../../../molecules/Alert';\r\n\r\nimport AddCategory from '../components/AddCategory';\r\nimport DeleteCategory from '../components/DeleteCategory';\r\n\r\nclass CategoriesContainer extends React.Component {\r\n  state = {\r\n    categories: [],\r\n    newCategory: '',\r\n    categoryToDelete: '',\r\n    alertMessage: '',\r\n    isDeleteModalVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = db\r\n      .collection('categories')\r\n      .doc('all')\r\n      .onSnapshot(querySnapshot => {\r\n        this.setState({ categories: querySnapshot.data().categories });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  handleForm = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleAddCategory = () => {\r\n    const { categories } = this.state;\r\n    const { newCategory } = this.state;\r\n\r\n    if (newCategory) {\r\n      const isCategoryUnique = !categories.includes(newCategory);\r\n      if (isCategoryUnique) {\r\n        const newCategories = {\r\n          categories: [...categories, newCategory],\r\n        };\r\n        db.collection('categories').doc('all').set(newCategories);\r\n\r\n        this.setState({ newCategory: '', alertMessage: '' });\r\n      } else {\r\n        this.setState({ alertMessage: 'Category already exist!' });\r\n      }\r\n    } else {\r\n      this.setState({ alertMessage: 'Enter a name!' });\r\n    }\r\n  };\r\n\r\n  handleDeleteCategory = () => {\r\n    const { categoryToDelete, categories } = this.state;\r\n\r\n    if (categoryToDelete) {\r\n      const categoriesWithoutDeletedOne = categories.filter(\r\n        category => category !== categoryToDelete,\r\n      );\r\n      const newCategories = {\r\n        categories: [...categoriesWithoutDeletedOne],\r\n      };\r\n\r\n      db.collection('categories').doc('all').set(newCategories);\r\n\r\n      this.setState({ categoryToDelete: '', alertMessage: '' });\r\n    } else {\r\n      this.setState({ alertMessage: 'Choose a category!' });\r\n    }\r\n  };\r\n\r\n  toggleDeleteModal = () => {\r\n    this.setState(prevState => ({\r\n      isDeleteModalVisible: !prevState.isDeleteModalVisible,\r\n    }));\r\n  };\r\n\r\n  setAlertMessage = message => {\r\n    this.setState({ alertMessage: message });\r\n  };\r\n\r\n  render() {\r\n    const categoriesContext = {\r\n      ...this.state,\r\n      handleForm: this.handleForm,\r\n      handleAddCategory: this.handleAddCategory,\r\n      handleDeleteCategory: this.handleDeleteCategory,\r\n      setAlertMessage: this.setAlertMessage,\r\n      toggleDeleteModal: this.toggleDeleteModal,\r\n    };\r\n\r\n    const { toggleCategoriesContainer } = this.props;\r\n    const { alertMessage } = this.state;\r\n    return (\r\n      <Modal>\r\n        <CategoriesContext.Provider value={categoriesContext}>\r\n          <AddCategory />\r\n          <br />\r\n          <Divider horizontal />\r\n          <DeleteCategory />\r\n          <br />\r\n          <ButtonIconCancel onClick={toggleCategoriesContainer} />\r\n        </CategoriesContext.Provider>\r\n        {alertMessage && <Alert>{alertMessage}</Alert>}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nCategoriesContainer.propTypes = {\r\n  toggleCategoriesContainer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoriesContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport H2 from '../../atoms/texts/H2';\r\nimport Button from '../../atoms/buttons/Button';\r\nimport CategoriesContainer from './container/CategoriesContainer';\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n  @media (min-width: 1024px) {\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nconst Section = styled.section`\r\n  @media (min-width: 1024px) {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 20px;\r\n  }\r\n`;\r\n\r\nconst WrapperButton = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media (min-width: 1024px) {\r\n    height: 90px;\r\n  }\r\n`;\r\n\r\nclass CategoriesSection extends React.Component {\r\n  state = {\r\n    isCategoriesContainerVisible: false,\r\n  };\r\n\r\n  toggleCategoriesContainer = () => {\r\n    this.setState(prevState => ({\r\n      isCategoriesContainerVisible: !prevState.isCategoriesContainerVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isCategoriesContainerVisible } = this.state;\r\n    return (\r\n      <Section>\r\n        <Header>\r\n          <H2>Categories</H2>\r\n        </Header>\r\n        <WrapperButton>\r\n          <Button type=\"button\" onClick={this.toggleCategoriesContainer}>\r\n            Add / Remove\r\n          </Button>\r\n        </WrapperButton>\r\n        {isCategoriesContainerVisible && (\r\n          <CategoriesContainer toggleCategoriesContainer={this.toggleCategoriesContainer} />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoriesSection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport db from '../../../fbase';\r\nimport Modal from '../../templates/Modal';\r\nimport sampleData from '../../../data/db.json';\r\n\r\nimport WrapperButtonsConfirmAndCancel from '../../molecules/WrapperButtonsConfirmAndCancel';\r\nimport H1 from '../../atoms/texts/H1';\r\nimport H2 from '../../atoms/texts/H2';\r\n\r\nconst InsertSampleDataModal = ({ toggleInsertModal }) => {\r\n  const uploadSampleData = () => {\r\n    const dbRef = db.collection('products');\r\n\r\n    sampleData.products.forEach(sampleProduct => {\r\n      dbRef\r\n        .doc(sampleProduct.id)\r\n        .set({ ...sampleProduct })\r\n        .then(() => console.log('SUCCESSS'))\r\n        .catch(() => console.log('ERROR!!!'));\r\n    });\r\n  };\r\n\r\n  const insertDataAndCloseModal = () => {\r\n    uploadSampleData();\r\n    toggleInsertModal();\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <H1 marginBottomDouble>Will be downloaded:</H1>\r\n      {sampleData.products.map(product => (\r\n        <H2 italic key={product.id}>\r\n          {product.name}\r\n        </H2>\r\n      ))}\r\n      <H1 marginTop>Continue ?</H1>\r\n      <WrapperButtonsConfirmAndCancel\r\n        cancelOnClick={toggleInsertModal}\r\n        confirmOnClick={insertDataAndCloseModal}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nInsertSampleDataModal.propTypes = {\r\n  toggleInsertModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InsertSampleDataModal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport H2 from '../../atoms/texts/H2';\r\nimport Button from '../../atoms/buttons/Button';\r\nimport InsertSampleDataModal from './ModalInsertSampleData';\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 1024px) {\r\n    height: 100%;\r\n    /* display: flex; */\r\n    /* flex-direction: column; */\r\n    margin: 0 20px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding: 15px 0;\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst WrapperButton = styled.div`\r\n  padding: 20px 0;\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 90px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nclass SampleDataSection extends React.Component {\r\n  state = {\r\n    isInsertModalVisible: false,\r\n  };\r\n\r\n  toggleInsertModal = () => {\r\n    this.setState(prevState => ({\r\n      isInsertModalVisible: !prevState.isInsertModalVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isInsertModalVisible } = this.state;\r\n\r\n    return (\r\n      <Section>\r\n        <Header>\r\n          <H2>Sample Data</H2>\r\n        </Header>\r\n        <WrapperButton>\r\n          <Button type=\"button\" onClick={this.toggleInsertModal}>\r\n            Download\r\n          </Button>\r\n        </WrapperButton>\r\n        {isInsertModalVisible && (\r\n          <InsertSampleDataModal toggleInsertModal={this.toggleInsertModal} />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SampleDataSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport DarkModeSection from '../components/settings/darkModeSection/DarkModeSection';\r\nimport CategoriesSection from '../components/settings/categoriesSection/CategoriesSection';\r\nimport Divider from '../components/atoms/divider/Divider';\r\nimport InsertSampleData from '../components/settings/sampleDataSection/SampleDataSection';\r\n\r\nconst Main = styled.main`\r\n  color: ${props => props.theme.textPrimary};\r\n  background-color: ${props => props.theme.background};\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding-top: 30px;\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 250px;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst Settings = () => (\r\n  <Main>\r\n    <Wrapper>\r\n      <DarkModeSection />\r\n      <Divider />\r\n      <InsertSampleData />\r\n      <Divider />\r\n      <CategoriesSection />\r\n    </Wrapper>\r\n  </Main>\r\n);\r\nexport default Settings;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCogs, faList, faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppContext } from '../../context';\r\n\r\nconst Header = styled.header`\r\n  background-color: ${({ theme }) => theme.primary};\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  height: 100%;\r\n`;\r\n\r\nconst IconWithCounterWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ShoppingListCounter = styled.div`\r\n  width: 30px;\r\n  height: 34px;\r\n  font-size: 24px;\r\n  line-height: 34px;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  border-radius: 50px;\r\n  margin-left: 10px;\r\n  overflow: hidden;\r\n\r\n  &.active {\r\n    color: #fff;\r\n    letter-spacing: 0.15px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-size: 30px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst NavLinkWrapper = styled(NavLink)`\r\n  padding-top: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  flex: 1;\r\n  line-height: 18px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.inactiveNavColor};\r\n  transition: font-size 0.2s;\r\n  overflow: hidden;\r\n\r\n  &.active {\r\n    color: ${({ theme }) => theme.activeTextColorNav};\r\n    letter-spacing: 0.15px;\r\n    font-size: 18px;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.activeTextColorNav};\r\n      letter-spacing: 0.15px;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    font-size: 18px;\r\n    color: #fde3c2;\r\n  }\r\n`;\r\n\r\nconst Navigation = () => {\r\n  const numberOfProductsOnShoppingList = products => {\r\n    const productsOnShoppingList = products.filter(product => product.onShoppingList);\r\n    return productsOnShoppingList.length;\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {context => (\r\n        <Header>\r\n          <Nav>\r\n            <NavLinkWrapper to=\"/settings\">\r\n              <Icon icon={faCogs} />\r\n              <p>Settings</p>\r\n            </NavLinkWrapper>\r\n            <NavLinkWrapper to=\"/\" exact>\r\n              <Icon icon={faList} />\r\n              <p>Pantry</p>\r\n            </NavLinkWrapper>\r\n            <NavLinkWrapper to=\"/shopping\">\r\n              <IconWithCounterWrapper>\r\n                <Icon icon={faShoppingCart} />\r\n                <ShoppingListCounter>\r\n                  <span>{numberOfProductsOnShoppingList(context.products)}</span>\r\n                </ShoppingListCounter>\r\n              </IconWithCounterWrapper>\r\n              <p>Shopping</p>\r\n            </NavLinkWrapper>\r\n          </Nav>\r\n        </Header>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyle from '../themes/GlobalStyle';\r\nimport { defaultTheme, darkTheme, lightTheme } from '../themes/themes';\r\nimport sampleData from '../data/db.json';\r\nimport db from '../fbase';\r\nimport { AppContext } from '../context';\r\nimport Pantry from './Pantry';\r\nimport Shopping from './Shopping';\r\nimport Settings from './Settings';\r\nimport Navigation from '../components/navigation/Navigation';\r\n\r\nclass Root extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    products: [],\r\n    currentTheme: lightTheme,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = db.collection('products').onSnapshot(querySnapshot => {\r\n      const downloadedProducts = [];\r\n\r\n      querySnapshot.forEach(doc => {\r\n        const newProduct = { ...doc.data() };\r\n        downloadedProducts.push(newProduct);\r\n      });\r\n\r\n      if (downloadedProducts.length === 0) {\r\n        const newCategories = {\r\n          categories: [...sampleData.categories],\r\n        };\r\n        db.collection('categories').doc('all').set(newCategories);\r\n      }\r\n\r\n      this.setState({\r\n        products: [...downloadedProducts],\r\n        isLoading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  changeTheme = () => {\r\n    const { currentTheme } = this.state;\r\n    this.setState({\r\n      currentTheme: currentTheme === lightTheme ? darkTheme : lightTheme,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentTheme } = this.state;\r\n    const contextElements = {\r\n      ...this.state,\r\n      changeTheme: this.changeTheme,\r\n    };\r\n\r\n    const mergedTheme = { ...defaultTheme, ...currentTheme };\r\n    return (\r\n      <BrowserRouter>\r\n        <ThemeProvider theme={mergedTheme}>\r\n          <GlobalStyle />\r\n          <AppContext.Provider value={contextElements}>\r\n            <Navigation />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Pantry} />\r\n              <Route path=\"/pantry\" component={Pantry} />\r\n              <Route path=\"/shopping\" component={Shopping} />\r\n              <Route path=\"/settings\" component={Settings} />\r\n            </Switch>\r\n          </AppContext.Provider>\r\n        </ThemeProvider>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './views/Root';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  rootElement,\r\n);\r\n"],"sourceRoot":""}