{"version":3,"sources":["components/product/Product.jsx","components/productList/ProductList.jsx","components/newProductForm/NewProductForm.jsx","context.js","components/views/PantryView.jsx","components/productList/ShoppingList.jsx","components/views/ShoppingListView.jsx","themes/GlobalStyle.js","themes/GlobalStyleDark.js","components/views/SettingsView.jsx","Root.jsx","index.jsx"],"names":["StyledWrapper","styled","div","props","fontColor","StyledCartIconWrapper","StyledNameWrapper","StyledCenterWrapper","StyledRightWrapper","StyledLeftWrapper","StyledIcon","FontAwesomeIcon","StyledQuantityWrapper","StyledUnitWrapper","StyledPrompt","StyledDelteIconWrapper","StyledExclamationIconWrapper","StyledExclamationIcon","Prompt","handleDelete","deleteProduct","id","name","onClick","Product","state","isPromptVisibile","setState","this","quantity","unit","addProductQuantity","subtractProductQuantity","editProduct","min","cartIconShow","exclamationIconShow","icon","faExclamation","faShoppingCart","faMinusCircle","faPlusCircle","faPen","faTrash","React","Component","ProductList","products","map","item","key","StyledForm","form","StyledNameInput","input","StyledNumberInput","StyledButtonsWrapper","StyledConfirmIcon","StyledCancelIcon","StyledLabel","label","StyledButton","button","NewProductForm","handleForm","e","console","log","target","value","handleSubmit","preventDefault","category","newProduct","addNewProduct","handleFormVisibility","handleCloseForm","resetDefaultProduct","defaultProduct","categories","htmlFor","placeholder","type","onChange","disabled","hidden","faCheckSquare","faTimesCircle","AppContext","createContext","StyledHeader","header","StyledMenu","nav","StyledSettingsIconWrapper","StyledMenuItem","active","css","StyledListWrapper","ul","StyledCategoryLabel","StyledAddButtonWrapper","StyledAddProductButton","StyledShoppingListCounter","StyledMain","main","StyledContainer","PantryView","Consumer","context","to","faCogs","shoppingList","length","productsOfCategory","filter","product","isFormVisible","StyledDotIcon","StyledCartIcon","ShoppingList","faCircle","completeProductQuantityToMin","faCartArrowDown","ShoppingListView","GlobalStyle","createGlobalStyle","GlobalStyleDark","StyledHeading","StyledDarkModeWrapper","SettingsView","toggleDarkmode","darkMode","faToggleOn","faToggleOff","Root","data","isShoppingListPromptVisible","checkShoppingList","prevProduct","prevState","newShoppingList","newProducts","remainingProducts","shoppingListWithoutDeleteProduct","uuidv4","editingProduct","toggleShoppingListPrompt","forEach","contextElements","czosz","Provider","exact","path","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3e591700.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTrash,\r\n  faPen,\r\n  faPlusCircle,\r\n  faMinusCircle,\r\n  faExclamation,\r\n  faShoppingCart,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\npadding-left: 5%;\r\n  min-height: 40px;\r\n  line-height: 40px;\r\n  display: flex;\r\n  /* color: ${props => props.fontColor}; */\r\n  justify-content: space-between;\r\n/* word-wrap: break-word; */\r\n`;\r\n\r\nconst StyledCartIconWrapper = styled.div`\r\n  width: 40px;\r\n  /* cursor: auto !important; */\r\n`;\r\n\r\nconst StyledNameWrapper = styled.div`\r\n  text-transform: capitalize;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst StyledCenterWrapper = styled.div`\r\n  display: flex;\r\n  width: 30%;\r\n`;\r\n\r\nconst StyledRightWrapper = styled.div`\r\n  display: flex;\r\n  width: 25%;\r\n`;\r\n\r\nconst StyledLeftWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 55%;\r\n`;\r\n\r\nconst StyledIcon = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  line-height: 40px;\r\n  margin: 0 10px;\r\n  color: rgba(0, 0, 0, 0.54);\r\n`;\r\n\r\nconst StyledQuantityWrapper = styled.div`\r\n  font-weight: 900;\r\n  text-align: center;\r\n`;\r\nconst StyledUnitWrapper = styled.div`\r\n  margin-left: 5px;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledPrompt = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  top: 25%;\r\n  left: 25%;\r\n  width: %;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 10%;\r\n  background-color: white;\r\n`;\r\n\r\nconst StyledDelteIconWrapper = styled.div`\r\n  margin-right: 5%;\r\n`;\r\n\r\nconst StyledExclamationIconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: -10%;\r\n`;\r\n\r\nconst StyledExclamationIcon = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  line-height: 40px;\r\n  margin: 0 10px;\r\n  color: red;\r\n`;\r\n\r\nconst Prompt = ({ handleDelete, deleteProduct, id, name }) => (\r\n  <StyledPrompt>\r\n    <p>Usunąc ?</p>\r\n    <p>{name}</p>\r\n    <button onClick={() => deleteProduct(id)}>tak</button>\r\n    <button onClick={handleDelete}>nie</button>\r\n  </StyledPrompt>\r\n);\r\n\r\nclass Product extends React.Component {\r\n  state = {\r\n    isPromptVisibile: false,\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.setState({ isPromptVisibile: !this.state.isPromptVisibile });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      quantity,\r\n      unit,\r\n      addProductQuantity,\r\n      subtractProductQuantity,\r\n      deleteProduct,\r\n      editProduct,\r\n      min,\r\n      id,\r\n    } = this.props;\r\n\r\n    const cartIconShow = quantity < min;\r\n    const exclamationIconShow = !quantity;\r\n\r\n    // let fontColor;\r\n\r\n    // if (exclamationIconShow) {\r\n    //   fontColor = 'red';\r\n    // } else if (cartIconShow) {\r\n    //   fontColor = 'orange';\r\n    // } else {\r\n    //   fontColor = 'black';\r\n    // }\r\n\r\n    return (\r\n      // <StyledWrapper fontColor={fontColor}>\r\n      <StyledWrapper>\r\n        <StyledLeftWrapper>\r\n          <StyledExclamationIconWrapper>\r\n            {exclamationIconShow && (\r\n              <StyledExclamationIcon icon={faExclamation} />\r\n            )}\r\n          </StyledExclamationIconWrapper>\r\n          <StyledCartIconWrapper>\r\n            {cartIconShow && <StyledIcon icon={faShoppingCart} />}\r\n          </StyledCartIconWrapper>\r\n          <div>\r\n            <StyledNameWrapper>{name}</StyledNameWrapper>\r\n          </div>\r\n        </StyledLeftWrapper>\r\n        <StyledCenterWrapper>\r\n          <div>\r\n            <StyledIcon\r\n              icon={faMinusCircle}\r\n              onClick={() => subtractProductQuantity(id)}\r\n            />\r\n          </div>\r\n\r\n          <StyledQuantityWrapper>{quantity}</StyledQuantityWrapper>\r\n          <StyledUnitWrapper>{unit}</StyledUnitWrapper>\r\n          <div>\r\n            <StyledIcon\r\n              icon={faPlusCircle}\r\n              onClick={() => addProductQuantity(id)}\r\n            />\r\n          </div>\r\n        </StyledCenterWrapper>\r\n        <StyledRightWrapper>\r\n          <div>\r\n            {/* <StyledEditIconWrapper> */}\r\n            <StyledIcon icon={faPen} onClick={() => editProduct(id)} />\r\n            {/* </StyledEditIconWrapper> */}\r\n          </div>\r\n          <StyledDelteIconWrapper>\r\n            <StyledIcon icon={faTrash} onClick={this.handleDelete} />\r\n          </StyledDelteIconWrapper>\r\n        </StyledRightWrapper>\r\n\r\n        {this.state.isPromptVisibile && (\r\n          <Prompt\r\n            handleDelete={this.handleDelete}\r\n            id={id}\r\n            deleteProduct={deleteProduct}\r\n            name={name}\r\n          />\r\n        )}\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n// = ({\r\n//   name,\r\n//   quantity,\r\n//   unit,\r\n//   addProductQuantity,\r\n//   subtractProductQuantity,\r\n//   deleteProduct,\r\n//   editProduct,\r\n//   min,\r\n//   id,\r\n// }) => {\r\n//   const cartIconShow = quantity < min;\r\n//   const exclamationIconShow = !quantity;\r\n\r\n//   let fontColor;\r\n\r\n//   if (exclamationIconShow) {\r\n//     fontColor = 'red';\r\n//   } else if (cartIconShow) {\r\n//     fontColor = 'orange';\r\n//   } else {\r\n//     fontColor = 'black';\r\n//   }\r\n\r\n// };\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Product from '../product/Product';\r\n\r\nconst ProductList = ({\r\n  products,\r\n  addProductQuantity,\r\n  subtractProductQuantity,\r\n  deleteProduct,\r\n  editProduct,\r\n}) => (\r\n  <ul>\r\n    {products.map(item => {\r\n      const { name, quantity, unit, id, min } = item;\r\n      return (\r\n        <li key={name}>\r\n          <Product\r\n            id={id}\r\n            name={name}\r\n            min={min}\r\n            quantity={quantity}\r\n            unit={unit}\r\n            addProductQuantity={addProductQuantity}\r\n            subtractProductQuantity={subtractProductQuantity}\r\n            deleteProduct={deleteProduct}\r\n            editProduct={editProduct}\r\n          />\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTimesCircle,\r\n  faCheckSquare,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledForm = styled.form`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 10%;\r\n  background-color: white;\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  background-color: white;\r\n  box-shadow: 1px 0px 18px 4px rgba(0, 0, 0, 0.66);\r\n`;\r\n\r\nconst StyledNameInput = styled.input`\r\n  width: 150px;\r\n`;\r\n\r\nconst StyledNumberInput = styled.input`\r\n  width: 50px;\r\n`;\r\n\r\nconst StyledButtonsWrapper = styled.div`\r\n  display: flex;\r\n  width: 130px;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledConfirmIcon = styled(FontAwesomeIcon)`\r\n  font-size: 40px;\r\n  color: #01a39d;\r\n`;\r\n\r\nconst StyledCancelIcon = styled(FontAwesomeIcon)`\r\n  font-size: 40px;\r\n  color: rgba(0, 0, 0, 0.54);\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  background-color: white;\r\n`;\r\n\r\nclass NewProductForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { name, quantity, category, min, unit, id } = props.defaultProduct;\r\n\r\n    console.log(unit);\r\n\r\n    this.state = {\r\n      name,\r\n      quantity,\r\n      category,\r\n      min,\r\n      unit,\r\n      id,\r\n    };\r\n  }\r\n\r\n  handleForm = e => {\r\n    console.log(e.target.value);\r\n    console.log(e.target.id);\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, quantity, category, min, unit, id } = this.state;\r\n\r\n    if (name && quantity && category && min && unit) {\r\n      const newProduct = {\r\n        name,\r\n        quantity,\r\n        category,\r\n        min,\r\n        unit,\r\n        id,\r\n      };\r\n\r\n      console.log('wypelnoine wszystkie');\r\n      this.props.addNewProduct(newProduct);\r\n\r\n      this.setState({\r\n        name: '',\r\n        quantity: '',\r\n        category: '',\r\n        min: '1',\r\n        unit: 'szt',\r\n        id: null,\r\n      });\r\n\r\n      this.props.handleFormVisibility();\r\n    } else {\r\n      console.log('WYPEŁNIJ  SZYSTKIE POLA');\r\n    }\r\n  };\r\n\r\n  handleCloseForm = (handleFormVisibility, resetDefaultProduct) => {\r\n    resetDefaultProduct();\r\n    handleFormVisibility();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categories,\r\n      handleFormVisibility,\r\n      resetDefaultProduct,\r\n    } = this.props;\r\n\r\n    return (\r\n      <StyledWrapper>\r\n        <StyledForm>\r\n          <StyledLabel htmlFor=\"name\">\r\n            Nazwa:\r\n            <StyledNameInput\r\n              id=\"name\"\r\n              placeholder=\"nazwa\"\r\n              type=\"text\"\r\n              onChange={this.handleForm}\r\n              value={this.state.name}\r\n            />\r\n          </StyledLabel>\r\n          <StyledLabel htmlFor=\"quantity\">\r\n            Ilość:\r\n            <StyledNumberInput\r\n              id=\"quantity\"\r\n              placeholder=\"ilość\"\r\n              type=\"number\"\r\n              onChange={this.handleForm}\r\n              value={this.state.quantity}\r\n            />\r\n          </StyledLabel>\r\n          <StyledLabel htmlFor=\"unit\">\r\n            Jednostka:\r\n            <select\r\n              id=\"unit\"\r\n              onChange={this.handleForm}\r\n              value={this.state.unit}\r\n            >\r\n              <option value=\"szt\">szt</option>\r\n              <option value=\"l\">l</option>\r\n              <option value=\"kg\">kg</option>\r\n            </select>\r\n          </StyledLabel>\r\n          <StyledLabel htmlFor=\"min\">\r\n            Minimalna ilość:\r\n            <StyledNumberInput\r\n              id=\"min\"\r\n              type=\"number\"\r\n              placeholder=\"minimalna ilość\"\r\n              onChange={this.handleForm}\r\n              value={this.state.min}\r\n            />\r\n          </StyledLabel>\r\n          <StyledLabel htmlFor=\"category\">\r\n            Kategoria:\r\n            <select\r\n              id=\"category\"\r\n              onChange={this.handleForm}\r\n              value={this.state.category}\r\n            >\r\n              <option value=\"\" disabled hidden />\r\n              {categories.map(category => (\r\n                <option key={category} value={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </StyledLabel>\r\n          <StyledButtonsWrapper>\r\n            <StyledButton type=\"submit\" onClick={this.handleSubmit}>\r\n              <StyledConfirmIcon icon={faCheckSquare} />\r\n            </StyledButton>\r\n\r\n            <StyledButton\r\n              type=\"button\"\r\n              onClick={() =>\r\n                this.handleCloseForm(handleFormVisibility, resetDefaultProduct)\r\n              }\r\n            >\r\n              <StyledCancelIcon icon={faTimesCircle} />\r\n            </StyledButton>\r\n          </StyledButtonsWrapper>\r\n        </StyledForm>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProductForm;\r\n","import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import React from 'react';\r\n// import './styles.css';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n// import data from './data/db.json';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCogs } from '@fortawesome/free-solid-svg-icons';\r\nimport ProductList from '../productList/ProductList';\r\nimport NewProductForm from '../newProductForm/NewProductForm';\r\nimport AppContext from '../../context';\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  height: 50px;\r\n  background-color: #202020;\r\n  color: white;\r\n  /* font-size: 20px; */\r\n`;\r\n\r\nconst StyledMenu = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #6202ee;\r\n\r\n  height: 70px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledSettingsIconWrapper = styled.div`\r\n  height: 100%;\r\n  padding: 5px;\r\n  font-size: 30px;\r\n  line-height: 40px;\r\n  /* background-color: green; */\r\n`;\r\n\r\nconst StyledMenuItem = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  width: 50%;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  background-color: #6202ee;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      color: #333;\r\n      background-color: #fff;\r\n      font-weight: 900 ${'' /* text-transform: uppercase; */};\r\n      letter-spacing: 0.15px;\r\n    `};\r\n`;\r\n\r\nconst StyledListWrapper = styled.ul`\r\n  /* background-color: #fff; */\r\n`;\r\n\r\nconst StyledCategoryLabel = styled.div`\r\n  padding: 5px 0 5px 20px;\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 23px;\r\n`;\r\n\r\nconst StyledAddButtonWrapper = styled.div`\r\n  background-color: #fff;\r\n  text-align: center;\r\n  padding: 15px 0;\r\n`;\r\n\r\nconst StyledAddProductButton = styled.button`\r\n  border: none;\r\n  width: 100px;\r\n  height: 40px;\r\n  background: #6202ee;\r\n  border-radius: 200px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst StyledShoppingListCounter = styled.div`\r\n  background-color: #fff;\r\n  color: #6202ee;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50px;\r\n  margin-left: 2px;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst StyledMain = styled.main`\r\n  height: calc(100vh - 120px);\r\n  /* height: 1000px; */\r\n  /* background-color: white; */\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst PantryView = () => (\r\n  <AppContext.Consumer>\r\n    {context => (\r\n      <StyledContainer>\r\n        <StyledHeader>\r\n          <Link to=\"/settings\">\r\n            <StyledSettingsIconWrapper>\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </StyledSettingsIconWrapper>\r\n          </Link>\r\n        </StyledHeader>\r\n        <StyledMenu>\r\n          <StyledMenuItem active>Products</StyledMenuItem>\r\n          <StyledMenuItem>\r\n            <div>\r\n              <Link to=\"/shoppinglist\">Shopping List</Link>\r\n            </div>\r\n            <StyledShoppingListCounter>\r\n              {context.shoppingList.length}\r\n            </StyledShoppingListCounter>\r\n          </StyledMenuItem>\r\n        </StyledMenu>\r\n        <StyledMain>\r\n          <StyledListWrapper>\r\n            {context.categories.map(category => {\r\n              const productsOfCategory = context.products.filter(\r\n                product => product.category === category,\r\n              );\r\n              if (productsOfCategory.length) {\r\n                console.log(\r\n                  `w categorii: ${category} mamy nastepujace produkty`,\r\n                );\r\n                console.log(productsOfCategory);\r\n                return (\r\n                  <li>\r\n                    <StyledCategoryLabel>{category}</StyledCategoryLabel>\r\n                    <ProductList\r\n                      products={productsOfCategory}\r\n                      addProductQuantity={context.addProductQuantity}\r\n                      subtractProductQuantity={context.subtractProductQuantity}\r\n                      deleteProduct={context.deleteProduct}\r\n                      editProduct={context.editProduct}\r\n                    />\r\n                  </li>\r\n                );\r\n              }\r\n            })}\r\n          </StyledListWrapper>\r\n          <StyledAddButtonWrapper>\r\n            <StyledAddProductButton\r\n              type=\"button\"\r\n              onClick={context.handleFormVisibility}\r\n            >\r\n              Dodaj\r\n            </StyledAddProductButton>\r\n          </StyledAddButtonWrapper>\r\n        </StyledMain>\r\n        {context.isFormVisible && (\r\n          <NewProductForm\r\n            resetDefaultProduct={context.resetDefaultProduct}\r\n            defaultProduct={context.defaultProduct}\r\n            handleFormVisibility={context.handleFormVisibility}\r\n            addNewProduct={context.addNewProduct}\r\n            categories={context.categories}\r\n          />\r\n        )}\r\n      </StyledContainer>\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default PantryView;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle, faCartArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport AppContext from '../../context';\r\n\r\nconst StyledListWrapper = styled.ul`\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\npadding-left: 5%;\r\n  min-height: 50px;\r\n  line-height: 50px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  /* color: ${props => props.fontColor}; */\r\n  justify-content: center;\r\n/* word-wrap: break-word; */\r\n`;\r\n\r\nconst StyledDotIcon = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  line-height: 40px;\r\n  margin: 0 10px;\r\n  color: rgba(0, 0, 0, 0.54);\r\n`;\r\n\r\nconst StyledCartIcon = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  line-height: 40px;\r\n  margin: 0 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  width: 50px;\r\n  height: 30px;\r\n  background: #6202ee;\r\n  border-radius: 200px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst StyledNameWrapper = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst ShoppingList = () => (\r\n  <AppContext.Consumer>\r\n    {context => (\r\n      <StyledListWrapper>\r\n        {console.log('jestem w KOMPONENTCIE shopping list')}\r\n        {context.shoppingList.map(product => (\r\n          <li>\r\n            <StyledWrapper>\r\n              <div>\r\n                <StyledDotIcon icon={faCircle} />\r\n              </div>\r\n              <StyledNameWrapper>{product.name}</StyledNameWrapper>\r\n              <StyledButton\r\n                onClick={() => context.completeProductQuantityToMin(product.id)}\r\n              >\r\n                <StyledCartIcon icon={faCartArrowDown} />\r\n              </StyledButton>\r\n            </StyledWrapper>\r\n          </li>\r\n        ))}\r\n      </StyledListWrapper>\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default ShoppingList;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCogs } from '@fortawesome/free-solid-svg-icons';\r\n// import ShoppingList from '../shoppingList/ShoppingList';\r\nimport AppContext from '../../context';\r\nimport ShoppingList from '../productList/ShoppingList';\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  height: 50px;\r\n  background-color: #202020;\r\n  color: white;\r\n  /* font-size: 20px; */\r\n`;\r\n\r\nconst StyledMenu = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #6202ee;\r\n\r\n  height: 70px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledSettingsIconWrapper = styled.div`\r\n  height: 100%;\r\n  padding: 5px;\r\n  font-size: 30px;\r\n  line-height: 40px;\r\n  /* background-color: green; */\r\n`;\r\n\r\nconst StyledMenuItem = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  width: 50%;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  background-color: #6202ee;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      color: #333;\r\n      background-color: #fff;\r\n      font-weight: 900 ${'' /* text-transform: uppercase; */};\r\n      letter-spacing: 0.15px;\r\n    `};\r\n`;\r\n\r\nconst StyledShoppingListCounter = styled.div`\r\n  background-color: #6202ee;\r\n  color: #fff;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50px;\r\n  margin-left: 2px;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst StyledMain = styled.main`\r\n  height: calc(100vh - 120px);\r\n  /* height: 1000px; */\r\n  background-color: white;\r\n`;\r\n\r\nconst ShoppingListView = () => (\r\n  <AppContext.Consumer>\r\n    {context => (\r\n      <div>\r\n        <StyledHeader>\r\n          <Link to=\"/settings\">\r\n            <StyledSettingsIconWrapper>\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </StyledSettingsIconWrapper>\r\n          </Link>\r\n        </StyledHeader>\r\n\r\n        <StyledMenu>\r\n          <StyledMenuItem>\r\n            <div>\r\n              <Link to=\"/\">Products</Link>\r\n            </div>\r\n          </StyledMenuItem>\r\n          <StyledMenuItem active>\r\n            <div>\r\n              <Link to=\"/shoppinglist\">Shopping List</Link>\r\n            </div>\r\n            <StyledShoppingListCounter>\r\n              {context.shoppingList.length}\r\n            </StyledShoppingListCounter>\r\n          </StyledMenuItem>\r\n        </StyledMenu>\r\n\r\n        <StyledMain>\r\n          <ShoppingList />\r\n        </StyledMain>\r\n      </div>\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default ShoppingListView;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;0,900;1,500&display=swap');\r\n\r\n    *,*::before, *::after{\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    html{\r\n        color: #333;\r\n        background-color: #0d0d0d;\r\nbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 100 100'%3E%3Crect x='0' y='0' width='78' height='78' fill-opacity='0.54' fill='%23292626'/%3E%3C/svg%3E\");\r\n    }\r\n\r\n    body{\r\n        font-family: 'Roboto', sans-serif;\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n        height: 100vh;\r\n        background-color: white;\r\n        color: black\r\n    }\r\n\r\n    ul{\r\n        list-style-type: none;\r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit\r\n    }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyleDark = createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;0,900;1,500&display=swap');\r\n\r\n    *,*::before, *::after{\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n \r\n    html{\r\n        color: white;\r\n        background-color: #0d0d0d;\r\nbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 100 100'%3E%3Crect x='0' y='0' width='78' height='78' fill-opacity='0.54' fill='%23292626'/%3E%3C/svg%3E\");\r\n        \r\n    }\r\n\r\n    \r\n    body{\r\n        background-color: black;\r\n        font-family: 'Roboto', sans-serif;\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n        height: 100vh;\r\n        color: white\r\n    }\r\n\r\n    ul{\r\n        list-style-type: none;\r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit\r\n    }\r\n\r\n`;\r\n\r\nexport default GlobalStyleDark;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCogs,\r\n  faToggleOn,\r\n  faToggleOff,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport AppContext from '../../context';\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  height: 50px;\r\n  background-color: #202020;\r\n  color: white;\r\n  /* font-size: 20px; */\r\n`;\r\n\r\nconst StyledMenu = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #6202ee;\r\n\r\n  height: 70px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledSettingsIconWrapper = styled.div`\r\n  height: 100%;\r\n  padding: 5px;\r\n  font-size: 30px;\r\n  line-height: 40px;\r\n  /* background-color: green; */\r\n`;\r\n\r\nconst StyledMenuItem = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  width: 50%;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  background-color: #6202ee;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      color: #333;\r\n      background-color: #fff;\r\n      font-weight: 900 ${'' /* text-transform: uppercase; */};\r\n      letter-spacing: 0.15px;\r\n    `};\r\n`;\r\n\r\nconst StyledShoppingListCounter = styled.div`\r\n  background-color: #6202ee;\r\n  color: #fff;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50px;\r\n  margin-left: 2px;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst StyledMain = styled.main`\r\n  height: calc(100vh - 120px);\r\n  /* height: 1000px; */\r\n  /* background-color: white; */\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  /* padding-top: 50px; */\r\n  width: 100%;\r\n  /* background-color: grey; */\r\n`;\r\n\r\nconst StyledHeading = styled.div`\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst StyledDarkModeWrapper = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n`;\r\n\r\nconst SettingsView = () => (\r\n  <AppContext.Consumer>\r\n    {context => (\r\n      <div>\r\n        <StyledHeader>\r\n          <Link to=\"/settings\">\r\n            <StyledSettingsIconWrapper>\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </StyledSettingsIconWrapper>\r\n          </Link>\r\n        </StyledHeader>\r\n\r\n        <StyledMenu>\r\n          <StyledMenuItem>\r\n            <div>\r\n              <Link to=\"/\">Products</Link>\r\n            </div>\r\n          </StyledMenuItem>\r\n          <StyledMenuItem>\r\n            <div>\r\n              <Link to=\"/shoppinglist\">Shopping List</Link>\r\n            </div>\r\n            <StyledShoppingListCounter>\r\n              {context.shoppingList.length}\r\n            </StyledShoppingListCounter>\r\n          </StyledMenuItem>\r\n        </StyledMenu>\r\n        <StyledMain>\r\n          <StyledWrapper>\r\n            <StyledHeading>Settings</StyledHeading>\r\n            <StyledDarkModeWrapper>\r\n              <div>Toggle Dark Mode:</div>\r\n              <div>\r\n                <button onClick={context.toggleDarkmode}>\r\n                  {console.log(`constextDarkMode: ${context.darkMode}`)}\r\n                  {context.darkMode ? (\r\n                    <FontAwesomeIcon icon={faToggleOn} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faToggleOff} />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </StyledDarkModeWrapper>\r\n          </StyledWrapper>\r\n        </StyledMain>\r\n      </div>\r\n    )}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default SettingsView;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PantryView from './components/views/PantryView';\r\nimport ShoppingListView from './components/views/ShoppingListView';\r\nimport AppContext from './context';\r\nimport data from './data/db.json';\r\nimport GlobalStyle from './themes/GlobalStyle';\r\nimport GlobalStyleDark from './themes/GlobalStyleDark';\r\nimport SettingsView from './components/views/SettingsView';\r\n\r\nclass Root extends React.Component {\r\n  state = {\r\n    products: [...data.products],\r\n    categories: [...data.categories],\r\n    isFormVisible: false,\r\n    shoppingList: [],\r\n    defaultProduct: {\r\n      name: '',\r\n      quantity: '',\r\n      category: '',\r\n      min: '3',\r\n      unit: 'szt',\r\n      id: null,\r\n    },\r\n    darkMode: false,\r\n    isShoppingListPromptVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.products.forEach(product => this.checkShoppingList(product));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('UPDATE');\r\n  }\r\n\r\n  checkShoppingList = product => {\r\n    if (product.min > product.quantity) {\r\n      const isProductInShoppintList = this.state.shoppingList.filter(\r\n        prevProduct => prevProduct.id === product.id,\r\n      );\r\n\r\n      if (!isProductInShoppintList.length) {\r\n        this.setState(prevState => ({\r\n          shoppingList: [...prevState.shoppingList, product],\r\n        }));\r\n      }\r\n    } else {\r\n      const newShoppingList = this.state.shoppingList.filter(\r\n        prevProduct => prevProduct.id !== product.id,\r\n      );\r\n      this.setState({ shoppingList: [...newShoppingList] });\r\n    }\r\n  };\r\n\r\n  addProductQuantity = id => {\r\n    const newProducts = this.state.products.map(product => {\r\n      if (product.id === id) {\r\n        product.quantity++;\r\n        this.checkShoppingList(product);\r\n      }\r\n      return product;\r\n    });\r\n    this.setState({ products: [...newProducts] });\r\n  };\r\n\r\n  subtractProductQuantity = id => {\r\n    const newProducts = this.state.products.map(product => {\r\n      if (product.id === id) {\r\n        if (product.quantity > 0) {\r\n          product.quantity--;\r\n          this.checkShoppingList(product);\r\n        }\r\n      }\r\n      return product;\r\n    });\r\n    this.setState({ products: [...newProducts] });\r\n  };\r\n\r\n  deleteProduct = id => {\r\n    const remainingProducts = this.state.products.filter(\r\n      product => product.id !== id,\r\n    );\r\n\r\n    const shoppingListWithoutDeleteProduct = this.state.shoppingList.filter(\r\n      prevProduct => prevProduct.id !== id,\r\n    );\r\n\r\n    this.setState({\r\n      products: [...remainingProducts],\r\n      shoppingList: [...shoppingListWithoutDeleteProduct],\r\n    });\r\n\r\n    console.log(remainingProducts);\r\n  };\r\n\r\n  addNewProduct = newProduct => {\r\n    console.log(newProduct);\r\n    console.log(`ID : ${newProduct.id}`);\r\n\r\n    if (newProduct.id) {\r\n      const newProducts = this.state.products.map(product => {\r\n        if (product.id === newProduct.id) {\r\n          product = { ...newProduct };\r\n          return product;\r\n        }\r\n        return product;\r\n      });\r\n\r\n      this.setState({ products: [...newProducts] });\r\n    } else {\r\n      newProduct.id = uuidv4();\r\n      this.setState(prevState => ({\r\n        products: [...prevState.products, newProduct],\r\n      }));\r\n    }\r\n\r\n    this.setState({\r\n      defaultProduct: {\r\n        name: '',\r\n        quantity: '',\r\n        category: '',\r\n        min: '3',\r\n        unit: 'szt',\r\n        id: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  editProduct = id => {\r\n    const editingProduct = this.state.products.filter(\r\n      product => product.id === id,\r\n    )[0];\r\n\r\n    this.setState({ defaultProduct: { ...editingProduct } });\r\n    this.handleFormVisibility();\r\n\r\n    console.log('product do edycji');\r\n    console.log(editingProduct);\r\n  };\r\n\r\n  handleFormVisibility = () => {\r\n    this.setState(prevState => ({ isFormVisible: !prevState.isFormVisible }));\r\n  };\r\n\r\n  completeProductQuantityToMin = id => {\r\n    const newProducts = this.state.products.map(product => {\r\n      if (product.id === id) {\r\n        product.quantity = product.min;\r\n        this.checkShoppingList(product);\r\n      }\r\n      return product;\r\n    });\r\n    this.setState({ products: [...newProducts] });\r\n  };\r\n\r\n  toggleDarkmode = () => {\r\n    this.setState({ darkMode: !this.state.darkMode });\r\n  };\r\n\r\n  toggleShoppingListPrompt = () => {\r\n    this.setState({\r\n      isShoppingListPromptVisible: !this.state.isShoppingListPromptVisible,\r\n    });\r\n  };\r\n\r\n  resetDefaultProduct = () => {\r\n    this.setState({\r\n      defaultProduct: {\r\n        name: '',\r\n        quantity: '',\r\n        category: '',\r\n        min: '3',\r\n        unit: 'szt',\r\n        id: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const contextElements = {\r\n      czosz: 'czosz',\r\n      ...this.state,\r\n      handleFormVisibility: this.handleFormVisibility,\r\n      editProduct: this.editProduct,\r\n      addNewProduct: this.addNewProduct,\r\n      deleteProduct: this.deleteProduct,\r\n      subtractProductQuantity: this.subtractProductQuantity,\r\n      addProductQuantity: this.addProductQuantity,\r\n      completeProductQuantityToMin: this.completeProductQuantityToMin,\r\n      toggleDarkmode: this.toggleDarkmode,\r\n      toggleShoppingListPrompt: this.toggleShoppingListPrompt,\r\n      resetDefaultProduct: this.resetDefaultProduct,\r\n    };\r\n    return (\r\n      <BrowserRouter>\r\n        {this.state.darkMode ? <GlobalStyleDark /> : <GlobalStyle />}\r\n        <AppContext.Provider value={contextElements}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={PantryView} />\r\n            <Route path=\"/shoppinglist\" component={ShoppingListView} />\r\n            <Route path=\"/settings\" component={SettingsView} />\r\n          </Switch>\r\n        </AppContext.Provider>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Root from './Root';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  rootElement,\r\n);\r\n"],"sourceRoot":""}